{"version":3,"sources":["Views/Shared/ClassificationsFilter.jsx","Views/NewPrescription/Partials/PatientIdInput.jsx","Views/NewPrescription/Partials/PrescriptionNote.jsx","Views/Shared/ActionBtn.jsx","Views/Shared/LoadingMini.jsx","Views/Shared/SearchableSelect.jsx","Views/NewPrescription/Partials/MedicinSelect.jsx","Views/NewPrescription/Partials/MedicineCard.jsx","Views/NewPrescription/Partials/MedicinsList.jsx","Views/NewPrescription/Partials/MedicinsPaper.jsx","Views/NewPrescription/Partials/ConditionSelect.jsx","Views/NewPrescription/index.jsx"],"names":["observer","store","className","classifications","map","c","title","Name","key","Id","enterDelay","selectedClassification","onClick","SelectClassification","src","ImageUrl","alt","useState","id","setId","name","setName","t","useTranslation","style","maxWidth","TextField","label","type","value","onChange","e","target","onBlur","SetPatientId","onKeyUp","keyCode","blur","variant","color","showPatientNameInput","patientName","SetPatientName","required","note","SetNote","ActionBtn","props","elem","useRef","useEffect","toggleShowLoading","loading","show","current","querySelector","display","ElementWithClassName","React","cloneElement","children","ref","LoadingMini","theme","useTheme","size","palette","primary","main","SearchableSelect","handleChange","selectedOption","handleSelect","setState","autoFocus","refs","input","focus","actionOnSelectedOption","mapOptionsToValues","options","option","getOptions","inputValue","callback","source","cancel","CancelToken","queryName","fetchUrl","Axios","get","cancelToken","token","then","res","data","catch","err","state","defaultValue","_","debounce","bind","this","defaultOptions","placeholder","inputId","classes","isMulti","cacheOptions","loadOptions","Component","MedicinSelect","width","v","AddMedicine","useStyle","makeStyles","root","background","borderBottom","borderWidth","icon","cursor","MedicineCard","onRemove","onToggleBold","onToggleChronic","Checkbox","inputProps","medicins","minHeight","m","i","RemoveMedicin","ToggleBold","ToggleChronic","backgroundColor","boxShadow","MedicinsPaper","setInputValue","Autocomplete","selectedCondition","event","newValue","SelectCondition","onInputChange","newInputValue","getOptionLabel","conditions","renderInput","params","NewPrescriptionStore","useContext","mainContext","FetchClassifications","redirect","to","LoadingPage","Box","pb","pt","ClassificationsFilter","submitingPrescription","Button","SubmitPrescription"],"mappings":"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","file":"static/js/13.c7e93252.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\n\r\nconst ClassificationsFilter = ({ store }) => {\r\n  return (\r\n    <div className=\"row justify-content-center\">\r\n      {store.classifications.map(c => (\r\n        <Tooltip title={c.Name} key={c.Id} enterDelay={1000}>\r\n          <div\r\n            className={`classification-icon  mx-4 my-2 ${\r\n              store.selectedClassification === c.Id ? \"selected\" : \"\"\r\n            }`}\r\n            onClick={() => store.SelectClassification(c.Id)}\r\n          >\r\n            <img src={c.ImageUrl} alt={c.Name} />\r\n          </div>\r\n        </Tooltip>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(ClassificationsFilter);\r\n","import React, { useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst PatientIdInput = ({ store }) => {\r\n  const [id, setId] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const { t } = useTranslation(\"common\");\r\n\r\n  return (\r\n    <div className=\" mx-auto row flex-column\" style={{ maxWidth: 330 }}>\r\n      <TextField\r\n        id=\"patient-id\"\r\n        label={t(\"patient id\")}\r\n        type=\"number\"\r\n        value={id}\r\n        onChange={e => setId(e.target.value)}\r\n        onBlur={() => store.SetPatientId(id)}\r\n        onKeyUp={e => e.keyCode === 13 && e.target.blur()} //if Enter was pressed\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        className=\" mb-3\"\r\n      />\r\n      {!store.showPatientNameInput && (\r\n        <h2 className=\"my-2\">{store.patientName}</h2>\r\n      )}\r\n\r\n      {store.showPatientNameInput && (\r\n        <TextField\r\n          id=\"patient-name\"\r\n          label={t(\"patient name\")}\r\n          value={name}\r\n          onChange={e => setName(e.target.value)}\r\n          onBlur={() => store.SetPatientName(name)}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          className=\" mb-3\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(PatientIdInput);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst PrescriptionNote = ({ store }) => {\r\n  const { t } = useTranslation(\"common\");\r\n\r\n  return (\r\n    <div className=\"row mt-5 mb-5 \">\r\n      <div className=\"container-note col-8 mx-auto px-0\">\r\n        <p className=\"note bg-primary\">{t(\"note\")}</p>\r\n        <textarea\r\n          type=\"text\"\r\n          className=\"write-note\"\r\n          required\r\n          value={store.note}\r\n          onChange={e => store.SetNote(e.target.value)}\r\n        ></textarea>\r\n        <div className=\"line1\"></div>\r\n        <div className=\"line2\"></div>\r\n        <div className=\"line3\"></div>\r\n        <div className=\"line4\"></div>\r\n        <div className=\"line5\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(PrescriptionNote);\r\n","import React, { useEffect, useRef } from \"react\";\r\n\r\nconst ActionBtn = props => {\r\n  const elem = useRef(null);\r\n\r\n  useEffect(() => {\r\n    toggleShowLoading(props.loading);\r\n  }, [props.loading]);\r\n\r\n  const toggleShowLoading = (show = false) => {\r\n    if (!elem.current) return;\r\n    if (show) {\r\n      elem.current.querySelector(\".loading\").style.display = \"block\";\r\n      elem.current.querySelector(\".content\").style.display = \"none\";\r\n    } else {\r\n      elem.current.querySelector(\".loading\").style.display = \"none\";\r\n      elem.current.querySelector(\".content\").style.display = \"block\";\r\n    }\r\n  };\r\n\r\n  let ElementWithClassName = React.cloneElement(props.children, {\r\n    ref: elem\r\n  });\r\n\r\n  return <>{ElementWithClassName}</>;\r\n};\r\n\r\nexport default ActionBtn;\r\n","import React from \"react\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\nimport { useTheme } from \"@material-ui/core\";\r\n\r\nconst LoadingMini = props => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <div className=\"align-self-center\">\r\n      <PulseLoader\r\n        //  css={override}\r\n        size={5}\r\n        color={theme.palette.primary.main}\r\n        loading={true}\r\n        {...props}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingMini;\r\n","import React from \"react\";\r\nimport AsyncSelect from \"react-select/async\";\r\nimport _ from \"lodash\";\r\nimport Axios from \"axios\";\r\n\r\n/*{\r\n    fetchUrl:'/api/users',\r\n    *queryName:'username',\r\n    *handleSelect:()=>{},\r\n    *autoFocus:true||false\r\n    *mapOptionsToValues:()=>{},\r\n    *classes:'',\r\n    *isMulti:'',\r\n    *placeholder:''\r\n}*/\r\nclass SearchableSelect extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedOption: this.props.defaultValue\r\n    };\r\n    this.getOptions = _.debounce(this.getOptions.bind(this), 500);\r\n    this.CancelToken = Axios.CancelToken;\r\n    this.source = this.CancelToken.source();\r\n  }\r\n\r\n  handleChange = selectedOption => {\r\n    this.props.handleSelect && this.props.handleSelect(selectedOption);\r\n    this.setState({\r\n      selectedOption: \"\"\r\n    });\r\n\r\n    if (this.props.autoFocus) this.refs.input.focus();\r\n\r\n    if (this.props.actionOnSelectedOption) {\r\n      this.props.actionOnSelectedOption(selectedOption.value);\r\n    }\r\n  };\r\n\r\n  mapOptionsToValues = options => {\r\n    return options.map(option => ({\r\n      value: option.Id,\r\n      label: option.Name\r\n    }));\r\n  };\r\n\r\n  getOptions = (inputValue, callback) => {\r\n    if (!inputValue) {\r\n      return callback([]);\r\n    }\r\n\r\n    this.source.cancel(\"search value updated\");\r\n    this.source = this.CancelToken.source();\r\n\r\n    const queryName = this.props.queryName;\r\n    const fetchUrl = `${this.props.fetchUrl}${\r\n      queryName ? `?${queryName}=${inputValue}` : \"\"\r\n    }`;\r\n\r\n    Axios.get(fetchUrl, { cancelToken: this.source.token })\r\n      .then(res => {\r\n        const { data } = res.data;\r\n        if (this.props.mapOptionsToValues)\r\n          callback(this.props.mapOptionsToValues(data));\r\n        else callback(this.mapOptionsToValues(data));\r\n      })\r\n      .catch(err => {});\r\n  };\r\n\r\n  // componentDidMount() {\r\n  //   this.inputElem = this.refs.input;\r\n  // }\r\n\r\n  render() {\r\n    const { defaultOptions, placeholder, inputId } = this.props;\r\n    return (\r\n      <AsyncSelect\r\n        ref=\"input\"\r\n        className={this.props.classes}\r\n        isMulti={this.props.isMulti}\r\n        inputId={inputId}\r\n        cacheOptions\r\n        value={this.state.selectedOption}\r\n        defaultOptions={defaultOptions}\r\n        loadOptions={this.getOptions}\r\n        placeholder={placeholder}\r\n        onChange={this.handleChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchableSelect;\r\n","import React from \"react\";\r\nimport SearchableSelect from \"../../Shared/SearchableSelect\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst MedicinSelect = ({ store }) => {\r\n  const { t } = useTranslation(\"common\");\r\n\r\n  return (\r\n    <div className=\"col-12 py-5 mx-auto row justify-content-center\">\r\n      <div style={{ width: \"100%\" }}>\r\n        <SearchableSelect\r\n          fetchUrl=\"/api/medicins\"\r\n          autoFocus={true}\r\n          queryName=\"name\"\r\n          classes=\"w-100\"\r\n          placeholder={t(\"type med name\")}\r\n          handleSelect={v => {\r\n            store.AddMedicine(v);\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicinSelect;\r\n","import React from \"react\";\r\nimport { makeStyles, Checkbox } from \"@material-ui/core\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\n\r\nconst useStyle = makeStyles({\r\n  root: () => ({\r\n    background: \"#FFF\",\r\n    borderBottom: \"1px solid #999\",\r\n    borderWidth: \"1px !important\"\r\n  }),\r\n  icon: {\r\n    cursor: \"pointer\"\r\n  }\r\n});\r\n\r\nconst MedicineCard = ({\r\n  name,\r\n  id,\r\n  onRemove,\r\n  onToggleBold,\r\n  onToggleChronic\r\n}) => {\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <div className=\"mb-\">\r\n      <div\r\n        className={`${classes.root} mx-auto px-2 py-2 row justify-content-between `}\r\n      >\r\n        <h5 className=\"mb-0 align-self-center\">{name}</h5>\r\n        <div className=\"col-12 ml-auto  col-sm-auto row justify-content-end align-items-center\">\r\n          <Checkbox\r\n            color=\"primary\"\r\n            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n            onChange={onToggleChronic}\r\n          />\r\n          <Checkbox\r\n            color=\"primary\"\r\n            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n            onChange={onToggleBold}\r\n          />\r\n          <Delete\r\n            onClick={onRemove}\r\n            style={{ color: \"#b90404\" }}\r\n            className={classes.icon}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicineCard;\r\n","import React from \"react\";\r\nimport MedicineCard from \"./MedicineCard\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst MedicinsList = ({ store }) => {\r\n  const medicins = store.medicins;\r\n  const { t } = useTranslation(\"common\");\r\n\r\n  return (\r\n    <div\r\n      className=\"row justify-content-center align-content-start mx-auto col-12\"\r\n      style={{ minHeight: 400 }}\r\n    >\r\n      <div className=\"col-12 px-0 row justify-content-between\">\r\n        <label className=\"\">{t(\"med name\")}</label>\r\n        <div>\r\n          <label className=\"mx-1\">{t(\"chronic\")}</label>\r\n          <label className=\"mx-1 mr-4\">{t(\"bold\")}</label>\r\n        </div>\r\n      </div>\r\n      <div className=\" w-100\">\r\n        {medicins.map((m, i) => {\r\n          return (\r\n            <MedicineCard\r\n              key={m.value}\r\n              name={m.label}\r\n              onRemove={() => store.RemoveMedicin(i)}\r\n              onToggleBold={() => store.ToggleBold(i)}\r\n              onToggleChronic={() => store.ToggleChronic(i)}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(MedicinsList);\r\n","import React from \"react\";\r\nimport MedicinSelect from \"./MedicinSelect\";\r\nimport MedicinsList from \"./MedicinsList\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles({\r\n  root: {\r\n    maxWidth: 500,\r\n    backgroundColor: \"#fff\",\r\n    boxShadow: \"3px 4px 10px #999\"\r\n  }\r\n});\r\n\r\nconst MedicinsPaper = ({ store }) => {\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <div className={`${classes.root} row mx-auto mb-5 px-3`}>\r\n      <MedicinSelect store={store} />\r\n      <MedicinsList store={store} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicinsPaper;\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { observer } from \"mobx-react\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nconst ConditionSelect = ({ store }) => {\r\n  const { t } = useTranslation(\"common\");\r\n\r\n  const [inputValue, setInputValue] = React.useState();\r\n\r\n  return (\r\n    <div className=\"col-12 py-5 mx-auto row justify-content-center\">\r\n      <Autocomplete\r\n        value={store.selectedCondition}\r\n        onChange={(event, newValue) => {\r\n          store.SelectCondition(newValue);\r\n        }}\r\n        inputValue={inputValue}\r\n        onInputChange={(event, newInputValue) => {\r\n          setInputValue(newInputValue);\r\n        }}\r\n        getOptionLabel={(option) => option.Name || \"\"}\r\n        options={store.conditions}\r\n        style={{ width: 300 }}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            label={t(\"select condition\")}\r\n            variant=\"outlined\"\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(ConditionSelect);\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport PatientIdInput from \"./Partials/PatientIdInput\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport PrescriptionNote from \"./Partials/PrescriptionNote\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { mainContext } from \"../../stores/Context\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ActionBtn from \"../Shared/ActionBtn\";\r\nimport LoadingMini from \"../Shared/LoadingMini\";\r\nimport ClassificationsFilter from \"../Shared/ClassificationsFilter\";\r\nimport LoadingPage from \"../Shared/LoadingPage\";\r\nimport MedicinsPaper from \"./Partials/MedicinsPaper\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport ConditionSelect from \"./Partials/ConditionSelect\";\r\n\r\nconst NewPrescription = () => {\r\n  const { NewPrescriptionStore } = useContext(mainContext);\r\n  const [store] = useState(new NewPrescriptionStore());\r\n  const { t } = useTranslation(\"common\");\r\n\r\n  useEffect(() => {\r\n    store.FetchClassifications();\r\n  }, [store]);\r\n\r\n  if (store.redirect) return <Redirect to=\"/\" />;\r\n\r\n  if (store.loading) return <LoadingPage />;\r\n\r\n  return (\r\n    <Box pb={8}>\r\n      <Box pt={5} display=\"flex\">\r\n        <PatientIdInput store={store} />\r\n      </Box>\r\n\r\n      <ClassificationsFilter store={store} />\r\n      <ConditionSelect store={store} />\r\n      <PrescriptionNote store={store} />\r\n      <MedicinsPaper store={store} />\r\n      <div className=\"row justify-content-center py-3\">\r\n        <ActionBtn loading={store.submitingPrescription}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => store.SubmitPrescription()}\r\n          >\r\n            <span className=\"content\">{t(\"submit prescription\")}</span>\r\n            <div className=\"loading\">\r\n              <LoadingMini color={\"#FFF\"} />\r\n            </div>\r\n          </Button>\r\n        </ActionBtn>\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default observer(NewPrescription);\r\n"],"sourceRoot":""}