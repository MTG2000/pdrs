{"version":3,"sources":["Views/Shared/Header.jsx","Views/Shared/Footer.jsx","Views/Shared/PrivateRoute.jsx","helpers/AppRouter.jsx","App.js","helpers/iconsLibrary.js","helpers/aos.js","helpers/vendors.js","helpers/materialTheme.js","helpers/ScrollToTopController.js","helpers/AppWrapper.js","index.js","stores/NewPrescriptionStore.jsx","stores/PatientPrescriptionsStore.jsx","stores/PrescriptionsDispensingStore.jsx","stores/AppStore.jsx","stores/Context.js","Views/Shared/LoadingPage.jsx"],"names":["Header","store","username","role","Navbar","collapseOnSelect","expand","bg","variant","style","zIndex","Brand","href","className","Toggle","aria-controls","Collapse","id","Nav","to","NavLink","onClick","a","Logout","Footer","PrivateRoute","Component","component","isAuth","props","console","log","render","innerProps","PatientsPrescriptions","React","lazy","NewPrescription","LoginPage","Home","DispensePrescription","Contact","observer","Suspense","fallback","LoadingPage","fullPage","path","App","AppStore","useContext","mainContext","useState","Container","library","add","faSmile","faAddressBook","AOS","init","offset","duration","easing","delay","axios","interceptors","response","use","error","data","post","localStorage","getItem","refreshToken","refTokenRes","setItem","config","res","Promise","resolve","clear","window","location","reject","theme","createMuiTheme","typography","fontFamily","join","palette","primary","main","secondary","overrides","MuiOutlinedInput","notchedOutline","borderColor","borderWidth","MuiInputLabel","root","color","ScrollToTop","prevProps","this","scrollTo","children","withRouter","AppWrapper","Context","ThemeProvider","ReactDOM","document","getElementById","NewPrescriptionStore","patientId","patientName","showPatientNameInput","note","medicins","classifications","selectedClassification","submitingPrescription","loading","redirect","v","FetchPatientName","length","get","runInAction","Name","medicine","push","index","filter","m","i","isChronic","isBold","value","prescription","toJS","classificationId","NotificationManager","success","setTimeout","message","title","decorate","observable","AddMedicine","action","SetPatientId","FetchClassifications","RemoveMedicin","ToggleBold","ToggleChronic","SelectClassification","SetNote","SubmitPrescription","SetPatientName","PatientPrescriptionsStore","allPrescriptions","prescriptions","chronicMedicins","loadingPrescriptions","FetchPrescriptions","p","Classification_Id","fetchUrl","concat","FilterPrescriptions","name","PrescriptionsDispensingStore","prescriptionId","messagesCategories","doctorName","undefined","pharmacyName","password","redirectUrl","DoctorName","PharmacyName","IsAdmin","type","phone","email","category","content","Login","FetchMessagesCategories","createContext","ContextProvider","Provider","useTheme","minHeight","height","width","margin"],"mappings":"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","file":"static/js/main.e804a3c6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navbar, Nav, NavLink } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = ({ store }) => {\r\n  const username = store.username;\r\n  const role = store.role;\r\n\r\n  return (\r\n    <Navbar\r\n      collapseOnSelect\r\n      expand=\"lg\"\r\n      bg=\"primary\"\r\n      variant=\"dark\"\r\n      style={{ zIndex: 100 }}\r\n    >\r\n      <Navbar.Brand href=\"/\">\r\n        <h4 className=\"no-gutters mb-0\">P.D.R.S</h4>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"ml-auto text-white\">\r\n          {role === \"Doctor\" && (\r\n            <Link className=\"nav-link text-white\" to=\"/new-prescription\">\r\n              New Prescription\r\n            </Link>\r\n          )}\r\n          {role === \"Pharmacy\" && (\r\n            <Link className=\"nav-link text-white\" to=\"/dispense-prescription\">\r\n              Dispense Prescription\r\n            </Link>\r\n          )}\r\n          {role === \"Doctor\" && (\r\n            <Link className=\"nav-link text-white\" to=\"/patients-prescriptions\">\r\n              Patinets Prescriptions\r\n            </Link>\r\n          )}\r\n          {role === \"Admin\" && (\r\n            <NavLink className=\"nav-link text-white\" href=\"/admin\">\r\n              Admin Dashboard\r\n            </NavLink>\r\n          )}\r\n          {username && role !== \"Admin\" && (\r\n            <Link className=\"nav-link text-white\" to=\"/contact\">\r\n              Technical Support\r\n            </Link>\r\n          )}\r\n          {!username && (\r\n            <Link className=\"nav-link text-white\" to=\"/about\">\r\n              About{\" \"}\r\n            </Link>\r\n          )}\r\n          {!username ? (\r\n            <Link className=\"nav-link text-white\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          ) : (\r\n            <Link\r\n              className=\"nav-link text-white\"\r\n              to=\"#\"\r\n              onClick={async () => {\r\n                await store.Logout();\r\n              }}\r\n            >\r\n              Logout\r\n            </Link>\r\n          )}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return <footer />;\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, isAuth = false, ...props }) => {\r\n  console.log(\"Private\");\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={innerProps => {\r\n        return isAuth ? (\r\n          <Component {...innerProps} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport PrivateRoute from \"../Views/Shared/PrivateRoute\";\r\nimport { observer } from \"mobx-react\";\r\nimport LoadingPage from \"../Views/Shared/LoadingPage\";\r\n\r\nconst PatientsPrescriptions = React.lazy(() =>\r\n  import(\"../Views/PatinetsPrescriptions\")\r\n);\r\nconst NewPrescription = React.lazy(() => import(\"../Views/NewPrescription\"));\r\nconst LoginPage = React.lazy(() => import(\"../Views/Login\"));\r\nconst Home = React.lazy(() => import(\"../Views/Home\"));\r\n\r\nconst DispensePrescription = React.lazy(() =>\r\n  import(\"../Views/PrescriptionsDispensing\")\r\n);\r\nconst Contact = React.lazy(() => import(\"../Views/Contact\"));\r\n\r\nconst AppRouter = ({ store }) => {\r\n  const { username, role } = store;\r\n\r\n  return (\r\n    <React.Suspense fallback={<LoadingPage fullPage={true} />}>\r\n      <Switch>\r\n        <Route path=\"/login\" component={LoginPage} />\r\n        <PrivateRoute path=\"/contact\" component={Contact} isAuth={username} />\r\n        <PrivateRoute\r\n          path=\"/new-prescription\"\r\n          component={NewPrescription}\r\n          isAuth={role === \"Doctor\"}\r\n        />\r\n        <PrivateRoute\r\n          path=\"/dispense-prescription\"\r\n          component={DispensePrescription}\r\n          isAuth={role === \"Pharmacy\"}\r\n        />\r\n        <PrivateRoute\r\n          path=\"/patients-prescriptions\"\r\n          component={PatientsPrescriptions}\r\n          isAuth={username}\r\n        />\r\n        <Route path=\"/\" component={Home} />\r\n      </Switch>\r\n    </React.Suspense>\r\n  );\r\n};\r\n\r\nexport default observer(AppRouter);\r\n","import React, { useContext, useState } from \"react\";\nimport Header from \"./Views/Shared/Header\";\nimport Footer from \"./Views/Shared/Footer\";\nimport { NotificationContainer } from \"react-notifications\";\nimport { Container } from \"react-bootstrap\";\n\nimport { mainContext } from \"./stores/Context\";\nimport AppRouter from \"./helpers/AppRouter\";\n// import Overlay from \"./components/Shared/Overlay\";\n\nfunction App() {\n  const { AppStore } = useContext(mainContext);\n  const [store] = useState(AppStore);\n\n  return (\n    <div className=\"App\">\n      <NotificationContainer />\n      <Header store={store} />\n      <Container>\n        <AppRouter store={store} />\n      </Container>\n      <Footer />\n      {/* <Overlay /> */}\n    </div>\n  );\n}\n\nexport default App;\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faSmile, faAddressBook } from \"@fortawesome/free-solid-svg-icons\";\r\nlibrary.add(faSmile, faAddressBook);\r\n","import AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\nAOS.init({\r\n  offset: 100,\r\n  duration: 700,\r\n  easing: \"ease-in-sine\",\r\n  delay: 100\r\n});\r\n","import \"./iconsLibrary\";\r\nimport \"./aos\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// Add a response interceptor\r\naxios.interceptors.response.use(\r\n  function(response) {\r\n    return response;\r\n  },\r\n  async function(error) {\r\n    //This is to request a new access token if the error was because its expiration\r\n    if (error.response.data === \"Token Expired\") {\r\n      try {\r\n        const refTokenRes = await axios.post(\"/api/users/refresh-token\", {\r\n          username: localStorage.getItem(\"username\"),\r\n          refreshToken: localStorage.getItem(\"refreshToken\")\r\n        });\r\n\r\n        localStorage.setItem(\r\n          \"refreshToken\",\r\n          refTokenRes.data.data.refreshToken\r\n        );\r\n\r\n        const res = await axios(error.config); //then we re-call the same method that got rejected\r\n        return Promise.resolve(res);\r\n      } catch (error) {\r\n        //Refresh Token Invalid so we ask the user to login again\r\n        localStorage.clear();\r\n        window.location = \"/login\";\r\n      }\r\n    }\r\n    // axios(error.config)\r\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n    // Do something with response error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst primaryColor = \"#007ebe\";\r\n\r\nexport const theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      \"Titillium Web\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"'\r\n    ].join(\",\")\r\n  },\r\n  palette: {\r\n    primary: {\r\n      // light: will be calculated from palette.primary.main,\r\n      main: primaryColor\r\n      // dark: will be calculated from palette.primary.main,\r\n      // contrastText: will be calculated to contrast with palette.primary.main\r\n    },\r\n    secondary: {\r\n      main: \"#8bb6cb\"\r\n      // dark: will be calculated from palette.secondary.main,\r\n    }\r\n    // error: will use the default color\r\n  },\r\n  overrides: {\r\n    MuiOutlinedInput: {\r\n      notchedOutline: {\r\n        borderColor: primaryColor,\r\n        borderWidth: 1\r\n      }\r\n    },\r\n    MuiInputLabel: {\r\n      root: {\r\n        // color: \"red\"\r\n        color: primaryColor\r\n      }\r\n    }\r\n  }\r\n});\r\n","import { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ScrollToTop extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React from \"react\";\r\nimport \"./theme.scss\";\r\nimport \"./App.scss\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { theme } from \"./materialTheme\";\r\nimport ScrollToTop from \"./ScrollToTopController\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport { ContextProvider } from \"../stores/Context\";\r\n\r\nconst AppWrapper = props => {\r\n  return (\r\n    <BrowserRouter>\r\n      <ContextProvider>\r\n        <ThemeProvider theme={theme}>\r\n          <ScrollToTop>{props.children}</ScrollToTop>\r\n        </ThemeProvider>\r\n      </ContextProvider>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default AppWrapper;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./helpers/vendors\";\nimport AppWrapper from \"./helpers/AppWrapper\";\n\nReactDOM.render(\n  <AppWrapper>\n    <App />\n  </AppWrapper>,\n  document.getElementById(\"root\")\n);\n","import { observable, action, decorate, runInAction, toJS } from \"mobx\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport axios from \"axios\";\r\n\r\nclass NewPrescriptionStore {\r\n  patientId = \"\";\r\n  patientName = \"\";\r\n  showPatientNameInput = false;\r\n  note = \"\";\r\n  medicins = [];\r\n  classifications = [];\r\n  selectedClassification = -1;\r\n  submitingPrescription = false;\r\n  loading = true;\r\n  redirect = false;\r\n\r\n  SetPatientId(v) {\r\n    this.patientId = v;\r\n    this.FetchPatientName();\r\n  }\r\n\r\n  SetPatientName(v) {\r\n    this.patientName = v;\r\n  }\r\n\r\n  async FetchPatientName() {\r\n    try {\r\n      if (this.patientId.length < 6) return;\r\n\r\n      const res = await axios.get(`/api/users/patient?id=${this.patientId}`);\r\n      const { data } = res.data;\r\n      runInAction(() => {\r\n        if (data.Name) {\r\n          this.patientName = data.Name;\r\n          this.showPatientNameInput = false;\r\n        } else {\r\n          this.showPatientNameInput = true;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      this.showPatientNameInput = true;\r\n      this.patientName = \"\";\r\n    }\r\n  }\r\n\r\n  async FetchClassifications() {\r\n    try {\r\n      const res = await axios.get(\"/api/medicins/classifications\");\r\n      const { data } = res.data;\r\n      runInAction(() => {\r\n        this.classifications = data;\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {}\r\n  }\r\n\r\n  SelectClassification(id) {\r\n    this.selectedClassification = id;\r\n  }\r\n\r\n  AddMedicine(medicine) {\r\n    this.medicins.push(medicine);\r\n  }\r\n\r\n  RemoveMedicin(index) {\r\n    this.medicins = this.medicins.filter((m, i) => i !== index);\r\n  }\r\n\r\n  ToggleChronic(index) {\r\n    this.medicins[index].isChronic = !this.medicins[index].isChronic;\r\n  }\r\n\r\n  ToggleBold(index) {\r\n    this.medicins[index].isBold = !this.medicins[index].isBold;\r\n  }\r\n\r\n  SetNote(value) {\r\n    this.note = value;\r\n  }\r\n\r\n  async SubmitPrescription() {\r\n    try {\r\n      if (this.submitingPrescription) return;\r\n\r\n      this.submitingPrescription = true;\r\n      const prescription = {\r\n        patientId: this.patientId,\r\n        patientName: this.patientName,\r\n        note: this.note,\r\n        medicins: toJS(this.medicins),\r\n        classificationId: this.selectedClassification\r\n      };\r\n\r\n      await axios.post(\"/api/patients/new-prescription\", { ...prescription });\r\n\r\n      NotificationManager.success(\"Prescription Created Successfully\");\r\n      this.submitingPrescription = false;\r\n      setTimeout(() => {\r\n        runInAction(() => {\r\n          this.redirect = true;\r\n        });\r\n      }, 3000);\r\n    } catch (error) {\r\n      NotificationManager.error(\r\n        error.response.data.message,\r\n        error.response.data.title\r\n      );\r\n\r\n      this.submitingPrescription = false;\r\n    }\r\n  }\r\n}\r\n\r\ndecorate(NewPrescriptionStore, {\r\n  redirect: observable,\r\n  loading: observable,\r\n  selectedClassification: observable,\r\n  patientId: observable,\r\n  showPatientNameInput: observable,\r\n  submitingPrescription: observable,\r\n  patientName: observable,\r\n  note: observable,\r\n  medicins: observable,\r\n  classifications: observable,\r\n  AddMedicine: action,\r\n  SetPatientId: action,\r\n  FetchClassifications: action,\r\n  RemoveMedicin: action,\r\n  ToggleBold: action,\r\n  ToggleChronic: action,\r\n  SelectClassification: action,\r\n  SetNote: action,\r\n  SubmitPrescription: action,\r\n  FetchPatientName: action,\r\n  SetPatientName: action\r\n});\r\n\r\nexport default NewPrescriptionStore;\r\n// const todoStoreInstance = new NewPrescription();\r\n// export default todoStoreInstance;\r\n","import { observable, action, decorate, runInAction } from \"mobx\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport axios from \"axios\";\r\n\r\nclass PatientPrescriptionsStore {\r\n  //Observables\r\n  patientId = \"\";\r\n  patientName = \"\";\r\n  classifications = [];\r\n  allPrescriptions = [];\r\n  prescriptions = [];\r\n  chronicMedicins = [];\r\n  selectedClassification = 0;\r\n  loading = true;\r\n  loadingPrescriptions = false;\r\n\r\n  SetPatientId(v) {\r\n    this.patientId = v;\r\n    this.FetchPatientName();\r\n    this.FetchPrescriptions();\r\n  }\r\n\r\n  async FetchPatientName() {\r\n    try {\r\n      const res = await axios.get(`/api/users/patient?id=${this.patientId}`);\r\n      const { data } = res.data;\r\n      runInAction(() => {\r\n        this.patientName = data.Name;\r\n      });\r\n    } catch (error) {\r\n      this.patientName = \"\";\r\n    }\r\n  }\r\n\r\n  FilterPrescriptions() {\r\n    if (!this.selectedClassification)\r\n      this.prescriptions = this.allPrescriptions;\r\n    else\r\n      this.prescriptions = this.allPrescriptions.filter(\r\n        p => p.Classification_Id === this.selectedClassification\r\n      );\r\n  }\r\n\r\n  async FetchClassifications() {\r\n    try {\r\n      const res = await axios.get(\"/api/medicins/classifications\");\r\n      const { data } = res.data;\r\n      runInAction(() => {\r\n        this.classifications = data;\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {}\r\n  }\r\n\r\n  async FetchPrescriptions() {\r\n    try {\r\n      this.loadingPrescriptions = true;\r\n      let fetchUrl = \"/api/patients/prescriptions?\";\r\n      fetchUrl = fetchUrl.concat(`patientId=${this.patientId}`);\r\n\r\n      const res = await axios.get(fetchUrl);\r\n      const { data } = res.data;\r\n      runInAction(() => {\r\n        this.allPrescriptions = data.prescriptions;\r\n        this.chronicMedicins = data.chronicMedicins;\r\n        this.loadingPrescriptions = false;\r\n      });\r\n      this.FilterPrescriptions();\r\n    } catch (error) {\r\n      if (error.name === \"AbortError\") return; //when we abort request the error gets thrown from where we called axios.get() so we catch it and do nothing\r\n      console.log(error);\r\n      //Request cancelled so that a new one can be sent\r\n      NotificationManager.error(\r\n        error.response.data.message,\r\n        error.response.data.title\r\n      );\r\n\r\n      this.loadingPrescriptions = false;\r\n    }\r\n  }\r\n\r\n  async SelectClassification(id) {\r\n    if (id === this.selectedClassification) this.selectedClassification = 0;\r\n    else this.selectedClassification = id;\r\n    if (this.patientId && this.allPrescriptions.length === 0)\r\n      await this.FetchPrescriptions();\r\n    else this.FilterPrescriptions();\r\n  }\r\n}\r\n\r\ndecorate(PatientPrescriptionsStore, {\r\n  loading: observable,\r\n  loadingPrescriptions: observable,\r\n  selectedClassification: observable,\r\n  prescriptions: observable,\r\n  chronicMedicins: observable,\r\n  patientId: observable,\r\n  patientName: observable,\r\n  classifications: observable,\r\n  SetPatientId: action,\r\n  FetchClassifications: action,\r\n  SelectClassification: action,\r\n  FetchPrescriptions: action,\r\n  FetchPatientName: action\r\n});\r\n\r\nexport default PatientPrescriptionsStore;\r\n// const todoStoreInstance = new PatientPrescriptionsStore();\r\n// export default todoStoreInstance;\r\n","import { observable, action, decorate, runInAction } from \"mobx\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport axios from \"axios\";\r\n\r\nclass PrescriptionsDispensingStore {\r\n  //Observables\r\n  patientId = \"\";\r\n  patientName = \"\";\r\n  prescriptions = [];\r\n  loading = true;\r\n  loadingPrescriptions = false;\r\n\r\n  SetPatientId(v) {\r\n    this.patientId = v;\r\n    this.FetchPatientName();\r\n    this.FetchPrescriptions();\r\n  }\r\n\r\n  async FetchPatientName() {\r\n    try {\r\n      const res = await axios.get(`/api/users/patients?id=${this.patientId}`);\r\n      const { data } = res.data;\r\n      runInAction(() => {\r\n        this.patientName = data.Name;\r\n      });\r\n    } catch (error) {\r\n      this.patientName = \"\";\r\n    }\r\n  }\r\n\r\n  async Dispense(prescriptionId, medicins = []) {\r\n    try {\r\n      await axios.post(\"/api/patients/dispense\", { prescriptionId, medicins });\r\n      NotificationManager.success(\"Prescription Dispensed Successfully\");\r\n      this.FetchPrescriptions();\r\n    } catch (error) {\r\n      NotificationManager.error(\r\n        error.response.data.message,\r\n        error.response.data.title\r\n      );\r\n    }\r\n  }\r\n\r\n  async FetchPrescriptions() {\r\n    try {\r\n      this.loadingPrescriptions = true;\r\n      let fetchUrl = \"/api/patients/prescriptions-to-dispense?\";\r\n      fetchUrl = fetchUrl.concat(`patientId=${this.patientId}`);\r\n      const res = await axios.get(fetchUrl);\r\n\r\n      const { data } = res.data;\r\n\r\n      runInAction(() => {\r\n        this.prescriptions = data.prescriptions;\r\n        this.loadingPrescriptions = false;\r\n      });\r\n    } catch (error) {\r\n      NotificationManager.error(\r\n        error.response.data.message,\r\n        error.response.data.title\r\n      );\r\n\r\n      this.loadingPrescriptions = false;\r\n    }\r\n  }\r\n\r\n  SelectClassification(id) {\r\n    this.selectedClassification = id;\r\n    if (this.patientId) this.FetchPrescriptions();\r\n  }\r\n}\r\n\r\ndecorate(PrescriptionsDispensingStore, {\r\n  loading: observable,\r\n  loadingPrescriptions: observable,\r\n  prescriptions: observable,\r\n  patientId: observable,\r\n  patientName: observable,\r\n  SetPatientId: action,\r\n  FetchPrescriptions: action,\r\n  FetchPatientName: action\r\n});\r\n\r\nexport default PrescriptionsDispensingStore;\r\n// const todoStoreInstance = new PrescriptionsDispensingStore();\r\n// export default todoStoreInstance;\r\n","import { observable, action, decorate, runInAction } from \"mobx\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport axios from \"axios\";\r\n\r\nclass AppStore {\r\n  username = \"\";\r\n  role = \"\";\r\n\r\n  messagesCategories = [];\r\n\r\n  constructor() {\r\n    this.username = localStorage.getItem(\"username\");\r\n    this.role = localStorage.getItem(\"user-role\");\r\n    this.doctorName = localStorage.getItem(\"doctorName\") || undefined;\r\n    this.pharmacyName = localStorage.getItem(\"pharmacyName\") || undefined;\r\n  }\r\n\r\n  async Login(username, password) {\r\n    try {\r\n      const res = await axios.post(\"/api/users/login\", { username, password });\r\n      const { data } = res.data;\r\n\r\n      runInAction(() => {\r\n        let redirectUrl = \"/\";\r\n        this.role = data.role;\r\n        localStorage.clear();\r\n        localStorage.setItem(\"refreshToken\", data.refreshToken);\r\n        localStorage.setItem(\"username\", data.username);\r\n        localStorage.setItem(\"user-role\", this.role);\r\n\r\n        if (data.DoctorName) {\r\n          this.doctorName = data.DoctorName;\r\n          localStorage.setItem(\"doctorName\", this.doctorName);\r\n          NotificationManager.success(\"Welcome Back Doctor \" + this.doctorName);\r\n        } else if (data.PharmacyName) {\r\n          this.pharmacyName = data.PharmacyName;\r\n          localStorage.setItem(\"pharmacyName\", this.pharmacyName);\r\n          NotificationManager.success(\"Welcome Back \");\r\n        } else if (data.IsAdmin) {\r\n          redirectUrl = \"/admin\";\r\n          NotificationManager.success(\"Welcome Back Admin \");\r\n        }\r\n        setTimeout(() => {\r\n          runInAction(() => {\r\n            this.username = data.username;\r\n            window.location = redirectUrl;\r\n          });\r\n        }, 3000);\r\n      });\r\n    } catch (error) {\r\n      NotificationManager.error(\r\n        error.response.data.message,\r\n        error.response.data.title\r\n      );\r\n    }\r\n  }\r\n\r\n  async SendRequest(name, type, phone, email) {\r\n    try {\r\n      await axios.post(\"/api/users/request-account\", {\r\n        name,\r\n        type,\r\n        phone,\r\n        email\r\n      });\r\n\r\n      NotificationManager.success(\" Your Request was sent successfuly\");\r\n    } catch (error) {\r\n      NotificationManager.error(\r\n        error.response.data.message,\r\n        error.response.data.title\r\n      );\r\n    }\r\n  }\r\n\r\n  async Logout() {\r\n    try {\r\n      await axios.get(\"/api/users/logout\");\r\n    } catch (error) {\r\n    } finally {\r\n      localStorage.clear();\r\n      window.location = \"/login\";\r\n    }\r\n  }\r\n\r\n  async FetchMessagesCategories() {\r\n    try {\r\n      const res = await axios.get(\"/api/users/messages-categories\");\r\n      const { data } = res.data;\r\n\r\n      runInAction(() => {\r\n        this.messagesCategories = data;\r\n      });\r\n    } catch (error) {}\r\n  }\r\n\r\n  async SendMessage(category, content) {\r\n    try {\r\n      await axios.post(\"/api/users/send-message\", {\r\n        category,\r\n        content\r\n      });\r\n      NotificationManager.success(\" Your Message was sent successfuly\");\r\n    } catch (error) {\r\n      NotificationManager.error(\r\n        error.response.data.message,\r\n        error.response.data.title\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\ndecorate(AppStore, {\r\n  username: observable,\r\n  role: observable,\r\n  messagesCategories: observable,\r\n  doctorName: observable,\r\n  pharmacyName: observable,\r\n  Login: action,\r\n  Logout: action,\r\n  FetchMessagesCategories: action\r\n});\r\n\r\nexport default new AppStore();\r\n// const todoStoreInstance = new NewPrescription();\r\n// export default todoStoreInstance;\r\n","import React from \"react\";\r\n\r\nimport NewPrescriptionStore from \"./NewPrescriptionStore\";\r\nimport PatientPrescriptionsStore from \"./PatientPrescriptionsStore\";\r\nimport PrescriptionsDispensingStore from \"./PrescriptionsDispensingStore\";\r\n\r\nimport AppStore from \"./AppStore\";\r\n\r\nexport const mainContext = React.createContext();\r\n\r\nexport const ContextProvider = props => {\r\n  return (\r\n    <mainContext.Provider\r\n      value={{\r\n        NewPrescriptionStore,\r\n        PatientPrescriptionsStore,\r\n        AppStore,\r\n        PrescriptionsDispensingStore\r\n      }}\r\n    >\r\n      {props.children}\r\n    </mainContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\r\nimport { useTheme } from \"@material-ui/core\";\r\n\r\nconst LoadingPage = props => {\r\n  const theme = useTheme();\r\n  return (\r\n    <div\r\n      className=\"row justify-content-center align-content-center py-5\"\r\n      style={{ minHeight: props.fullPage ? \"88vh\" : undefined }}\r\n    >\r\n      <ScaleLoader\r\n        //  css={override}\r\n        //        size={5}\r\n        height={55}\r\n        width={8}\r\n        margin={3}\r\n        color={theme.palette.primary.main}\r\n        loading={true}\r\n        {...props}\r\n      />\r\n      <h2 className=\"text-primary col-12 text-center py-2\">\r\n        {props.message || \"Loading\"}\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingPage;\r\n"],"sourceRoot":""}