{"version":3,"sources":["Views/PatinetsPrescriptions/Partials/PatientIdInput.jsx","Views/Shared/ClassificationsFilter.jsx","Views/PatinetsPrescriptions/Partials/PrescriptionCard.jsx","Views/PatinetsPrescriptions/Partials/ChronicMedicins.jsx","Views/PatinetsPrescriptions/Partials/PrescriptionsList.jsx","Views/PatinetsPrescriptions/index.js"],"names":["observer","store","useState","id","setId","t","useTranslation","className","style","maxWidth","label","type","value","onChange","e","target","onBlur","SetPatientId","onKeyUp","keyCode","blur","variant","color","showPatientNameInput","patientName","classifications","map","c","title","Name","key","Id","enterDelay","selectedClassification","onClick","SelectClassification","name","data-test-it","src","ImageUrl","alt","PrescriptionCard","prescription","fullDate","date","format","Date","Prescription_Date","miniDate","data-test-id","Note","Tooltip","Condition","ClassificationIconUrl","Classification_Name","medicins","m","i","Pharmacy_Id","IsBold","split","ChronicMedicins","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","aria-controls","Typography","ExpansionPanelDetails","loadingPrescriptions","LoadingPage","message","chronicMedicins","length","prescriptions","p","PatientPrescriptionsStore","useContext","mainContext","useEffect","FetchClassifications","loading","Box","py","display","PatientIdInput","ClassificationsFilter"],"mappings":"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","file":"static/js/12.06bcb5b4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst PatientIdInput = ({ store }) => {\r\n  const [id, setId] = useState(\"\");\r\n  const { t } = useTranslation(\"common\");\r\n\r\n  return (\r\n    <div className=\" mx-auto row flex-column\" style={{ maxWidth: 330 }}>\r\n      <TextField\r\n        id=\"patient-id\"\r\n        label={t(\"patient id\")}\r\n        type=\"number\"\r\n        value={id}\r\n        onChange={e => setId(e.target.value)}\r\n        onBlur={() => store.SetPatientId(id)}\r\n        onKeyUp={e => e.keyCode === 13 && e.target.blur()} //if Enter was pressed\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        className=\"mb-3\"\r\n      />\r\n      {!store.showPatientNameInput && (\r\n        <h2 className=\"my-2\">{store.patientName}</h2>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(PatientIdInput);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\n\r\nconst ClassificationsFilter = ({ store }) => {\r\n  return (\r\n    <div className=\"row justify-content-center\">\r\n      {store.classifications.map((c) => (\r\n        <Tooltip title={c.Name} key={c.Id} enterDelay={1000}>\r\n          <div\r\n            className={`classification-icon  mx-4 my-2 ${\r\n              store.selectedClassification === c.Id ? \"selected\" : \"\"\r\n            }`}\r\n            onClick={() => store.SelectClassification(c.Id)}\r\n            name={c.Name}\r\n            data-test-it=\"classification-icon\"\r\n          >\r\n            <img src={c.ImageUrl} alt={c.Name} />\r\n          </div>\r\n        </Tooltip>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(ClassificationsFilter);\r\n","import React from \"react\";\r\nimport date from \"date-and-time\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport Close from \"@material-ui/icons/Close\";\r\nimport Note from \"@material-ui/icons/Bookmark\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\n/*{\r\n            \"Id\": 1,\r\n            \"Doctor_Id\": 1,\r\n            \"Note\": \"The Patient sufferd from an intense injuery in his right arm\",\r\n            \"Prescription_Date\": \"2020-03-26 16:08:20\",\r\n            \"Classification_Name\": \"Heart\",\r\n            \"ClassificationIconUrl\": \"\\\\images\\\\classifications\\\\heart.svg\",\r\n            \"medicins\": [\r\n                {\r\n                    \"Name\": \"Sitamol\",\r\n                    \"IsBold\": \"0\",\r\n                    \"IsChronic\": \"0\",\r\n                    \"Pharmacy_Id\": null\r\n                },\r\n                {\r\n                    \"Name\": \"Panadol\",\r\n                    \"IsBold\": \"0\",\r\n                    \"IsChronic\": \"0\",\r\n                    \"Pharmacy_Id\": null\r\n                },\r\n                {\r\n                    \"Name\": \"Benzamien\",\r\n                    \"IsBold\": \"1\",\r\n                    \"IsChronic\": \"1\",\r\n                    \"Pharmacy_Id\": null\r\n                }\r\n            ]\r\n        }\r\n        */\r\nconst PrescriptionCard = ({ prescription }) => {\r\n  const fullDate = date.format(\r\n    new Date(prescription.Prescription_Date),\r\n    \"YYYY-MM-DD \"\r\n  );\r\n\r\n  const miniDate = date.format(\r\n    new Date(prescription.Prescription_Date),\r\n    \"DD MMM\"\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className=\"prescription-card mx-auto py-5\"\r\n      data-test-id=\"prescription-card\"\r\n    >\r\n      {prescription.Note ? (\r\n        <Tooltip title={<h6>{prescription.Note}</h6>}>\r\n          <div className=\"note  bg-primary px-3 py-3\">\r\n            <p className=\" mb-0 \">\r\n              {prescription.Condition} <Note />\r\n            </p>\r\n          </div>\r\n        </Tooltip>\r\n      ) : (\r\n        <div>\r\n          <div className=\"note  bg-primary px-3 py-3\">\r\n            <p className=\" mb-0 \">{prescription.Condition}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"icon \">\r\n        <img\r\n          src={prescription.ClassificationIconUrl}\r\n          alt={prescription.Classification_Name}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"medicins px-4 py-5 py-md-0  row justify-content-begin\">\r\n        {prescription.medicins.map((m, i) => (\r\n          <div key={i} className=\"col-10 col-md-5 mx-2\">\r\n            {m.Pharmacy_Id ? (\r\n              <Check style={{ color: \"green\" }} />\r\n            ) : (\r\n              <Close style={{ color: \"red\" }} />\r\n            )}{\" \"}\r\n            <p\r\n              className={`d-inline-block ml-2 ${\r\n                m.IsBold === \"1\" ? \"font-weight-bold\" : \"\"\r\n              }`}\r\n            >\r\n              {m.Name}\r\n            </p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <Tooltip title={fullDate}>\r\n        <div className=\"date bg-primary\">\r\n          <span className=\"h4 text-center\">{miniDate.split(\" \")[0]}</span>\r\n          <span>{miniDate.split(\" \")[1]}</span>\r\n        </div>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrescriptionCard;\r\n","import React from \"react\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst ChronicMedicins = ({ medicins }) => {\r\n  return (\r\n    <div className=\"py-4 mt-5 mx-auto\" style={{ maxWidth: 500 }}>\r\n      <ExpansionPanel defaultExpanded={true}>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography className=\"font-weight-bold text-primary\">\r\n            Chronic Medicins\r\n          </Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <div className=\"px-2\">\r\n            {medicins.map((m, i) => (\r\n              <Typography key={i}>{m}</Typography>\r\n            ))}\r\n          </div>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChronicMedicins;\r\n","import React from \"react\";\r\nimport PrescriptionCard from \"./PrescriptionCard\";\r\nimport { observer } from \"mobx-react\";\r\nimport ChronicMedicins from \"./ChronicMedicins\";\r\nimport LoadingPage from \"../../Shared/LoadingPage\";\r\n\r\nconst PrescriptionsList = ({ store }) => {\r\n  if (store.loadingPrescriptions)\r\n    return <LoadingPage message=\"Getting Prescriptions\" />;\r\n\r\n  return (\r\n    <div className=\"pb-5\">\r\n      {store.chronicMedicins.length > 0 && (\r\n        <ChronicMedicins medicins={store.chronicMedicins} />\r\n      )}\r\n      {store.prescriptions.map((p, i) => (\r\n        <PrescriptionCard key={i} prescription={p} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(PrescriptionsList);\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport PatientIdInput from \"./Partials/PatientIdInput\";\r\nimport PrescriptionsList from \"./Partials/PrescriptionsList\";\r\nimport { observer } from \"mobx-react\";\r\nimport { mainContext } from \"../../stores/Context\";\r\nimport LoadingPage from \"../Shared/LoadingPage\";\r\nimport ClassificationsFilter from \"../Shared/ClassificationsFilter\";\r\n\r\nconst PatientsPrescriptions = () => {\r\n  const { PatientPrescriptionsStore } = useContext(mainContext);\r\n\r\n  const [store] = useState(new PatientPrescriptionsStore());\r\n\r\n  useEffect(() => {\r\n    store.FetchClassifications();\r\n  }, [store]);\r\n\r\n  if (store.loading) return <LoadingPage />;\r\n\r\n  return (\r\n    <Box>\r\n      <Box py={5} display=\"flex\">\r\n        <PatientIdInput store={store} />\r\n      </Box>\r\n      <ClassificationsFilter store={store} />\r\n      <PrescriptionsList store={store} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default observer(PatientsPrescriptions);\r\n"],"sourceRoot":""}