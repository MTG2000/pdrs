{"version":3,"sources":["../node_modules/@material-ui/core/esm/Typography/Typography.js","../node_modules/@material-ui/core/esm/Button/Button.js","../node_modules/@material-ui/core/esm/styles/makeStyles.js","Views/Login/index.jsx"],"names":["defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","React","props","ref","_props$align","align","classes","className","_props$color","color","component","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","other","_objectWithoutProperties","Component","_extends","clsx","root","concat","capitalize","withStyles","theme","margin","typography","caption","button","overline","srOnly","position","height","width","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","name","Button","children","_props$component","_props$disabled","disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","endIconProp","endIcon","focusVisibleClassName","_props$fullWidth","fullWidth","_props$size","size","startIconProp","startIcon","_props$type","type","ButtonBase","focusRipple","focusVisible","label","boxSizing","minWidth","padding","borderRadius","shape","transition","transitions","create","duration","short","textDecoration","backgroundColor","fade","action","hoverOpacity","alignItems","justifyContent","textPrimary","textSecondary","outlined","border","disabledBackground","outlinedPrimary","outlinedSecondary","contained","getContrastText","grey","boxShadow","shadows","A100","containedPrimary","contrastText","dark","containedSecondary","borderColor","textSizeSmall","fontSize","pxToRem","textSizeLarge","outlinedSizeSmall","outlinedSizeLarge","containedSizeSmall","containedSizeLarge","sizeSmall","sizeLarge","marginRight","marginLeft","iconSizeSmall","iconSizeMedium","iconSizeLarge","makeStyles","stylesOrCreator","options","arguments","length","undefined","makeStylesWithoutDefault","defaultTheme","useStyle","input","borderWidth","LoginPage","useTheme","useState","username","setUsername","password","setPassword","AppStore","useContext","mainContext","store","t","useTranslation","window","location","style","minHeight","title","onSubmit","e","preventDefault","Login","maxWidth","id","value","onChange","target","required","InputProps","notchedOutline"],"mappings":"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","file":"static/js/10.2eb68f99.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends(_extends({}, theme.typography.button), {}, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 15px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabledBackground)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        boxShadow: theme.shadows[4],\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          boxShadow: theme.shadows[2],\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none',\n      '&:hover': {\n        boxShadow: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: 'none'\n      },\n      '&:active': {\n        boxShadow: 'none'\n      },\n      '&$disabled': {\n        boxShadow: 'none'\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n    textSizeSmall: {\n      padding: '4px 5px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n    textSizeLarge: {\n      padding: '8px 11px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n    outlinedSizeSmall: {\n      padding: '3px 9px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n    outlinedSizeLarge: {\n      padding: '7px 21px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n    containedSizeSmall: {\n      padding: '4px 10px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n    containedSizeLarge: {\n      padding: '8px 22px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {},\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the startIcon element if supplied. */\n    startIcon: {\n      display: 'inherit',\n      marginRight: 8,\n      marginLeft: -4,\n      '&$iconSizeSmall': {\n        marginLeft: -2\n      }\n    },\n\n    /* Styles applied to the endIcon element if supplied. */\n    endIcon: {\n      display: 'inherit',\n      marginRight: -4,\n      marginLeft: 8,\n      '&$iconSizeSmall': {\n        marginRight: -2\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 20\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n    iconSizeLarge: {\n      '& > *:first-child': {\n        fontSize: 22\n      }\n    }\n  };\n};\nvar Button = React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      endIconProp = props.endIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      startIconProp = props.startIcon,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  var startIcon = startIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.startIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, startIconProp);\n  var endIcon = endIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.endIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, endIconProp);\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes[\"\".concat(variant).concat(capitalize(color))], size !== 'medium' && [classes[\"\".concat(variant, \"Size\").concat(capitalize(size))], classes[\"size\".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, startIcon, children, endIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['text', 'outlined', 'contained'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  TextField,\r\n  useTheme,\r\n  makeStyles,\r\n  Typography,\r\n  Button,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport { mainContext } from \"../../stores/Context\";\r\nimport { useTranslation } from \"react-i18next\";\r\nconst useStyle = makeStyles({\r\n  input: (theme) => ({\r\n    borderColor: `${theme.palette.primary.main} !important`,\r\n    borderWidth: 2,\r\n  }),\r\n});\r\n\r\nconst LoginPage = () => {\r\n  const theme = useTheme();\r\n  const classes = useStyle({ ...theme });\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const { AppStore } = useContext(mainContext);\r\n  const [store] = useState(AppStore);\r\n\r\n  const { t } = useTranslation(\"common\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    store.Login(username, password);\r\n  };\r\n\r\n  if (store.username) {\r\n    window.location = \"/\";\r\n  }\r\n  return (\r\n    <div\r\n      className=\"row justify-content-center flex-column align-items-center\"\r\n      style={{ minHeight: \"100vh\" }}\r\n    >\r\n      <Tooltip\r\n        title={\r\n          <h6>\r\n            Accounts For Testing: <br /> (Doctor) \"ahmad\" , \"123123\"\r\n            <br /> (Pharmacian) \"samer\" , \"123123\"\r\n            <br /> (Admin) \"mtg\" , \"mtgmtgmtg\"\r\n          </h6>\r\n        }\r\n      >\r\n        <div className=\"floating-message\">?</div>\r\n      </Tooltip>\r\n      <Typography\r\n        variant=\"h3\"\r\n        color=\"primary\"\r\n        className=\"mb-5 col-12 text-center\"\r\n      >\r\n        {t(\"who are you\")}\r\n      </Typography>\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        className=\"row justify-content-center\"\r\n        style={{ maxWidth: 280 }}\r\n      >\r\n        <TextField\r\n          id=\"username\"\r\n          label={t(\"username\")}\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          variant=\"outlined\"\r\n          required\r\n          color=\"primary\"\r\n          className={`${classes.input} mx-auto mb-3 col-12 `}\r\n          InputProps={{\r\n            classes: {\r\n              notchedOutline: classes.input,\r\n            },\r\n          }}\r\n        />\r\n        <TextField\r\n          id=\"password\"\r\n          label={t(\"password\")}\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          variant=\"outlined\"\r\n          required\r\n          color=\"primary\"\r\n          className={`${classes.input} mx-auto mb-3 col-12 `}\r\n          InputProps={{\r\n            classes: {\r\n              notchedOutline: classes.input,\r\n            },\r\n          }}\r\n        />\r\n        <div className=\"row col-12 justify-content-center\">\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n          >\r\n            {t(\"login\")}\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"sourceRoot":""}