{"version":3,"sources":["Views/Shared/Header.jsx","Views/Shared/Footer.jsx","Views/Dashboard/Partials/NewMessageCard.jsx","Views/Dashboard/Partials/NewMessagesList.jsx","stores/AppState.js","stores/DashboardStore.js","stores/ManageUsersStore.js","stores/ManageMedicinsStore.js","stores/ManageClassifications.js","stores/StatisticsStore.js","stores/Context.js","Views/Dashboard/Partials/AccountRequestCard.jsx","Views/Dashboard/Partials/NewAccountRequests.jsx","Views/Dashboard/index.jsx","Views/Shared/ActionBtn.jsx","Views/Shared/LoadingMini.jsx","Views/ManageUsers/Partials/UserCard.jsx","Views/ManageUsers/Partials/UsersList.jsx","Views/ManageUsers/Partials/SearchInput.jsx","Views/ManageUsers/Partials/NewUser.jsx","Views/ManageUsers/index.jsx","Views/ManageMedicins/Partials/MedicinsList.jsx","Views/ManageMedicins/Partials/SearchInput.jsx","Views/ManageMedicins/Partials/NewMedicine.jsx","Views/ManageMedicins/index.js","Views/Shared/LoadingPage.jsx","Views/Statistics/Partials/SystemUsage.jsx","Views/Statistics/Partials/PrescriptionsPerClassification.jsx","Views/Statistics/Partials/MedicinsUsage.jsx","Views/Statistics/index.jsx","Views/ClassificationsAndConditions/partials/ClassificationCard.jsx","Views/ClassificationsAndConditions/partials/ClassificationsSection.jsx","Views/ClassificationsAndConditions/partials/ConditionCard.js","Views/ClassificationsAndConditions/partials/ConditionsSection.jsx","Views/ClassificationsAndConditions/partials/NewClassification.jsx","Views/ClassificationsAndConditions/index.js","helpers/AppRouter.jsx","Views/Shared/SideBar.jsx","App.js","helpers/iconsLibrary.js","helpers/aos.js","helpers/vendors.js","helpers/materialTheme.js","helpers/ScrollToTopController.js","helpers/AppWrapper.js","index.js"],"names":["observer","store","Footer","useStyle","makeStyles","card","backgroundColor","boxShadow","maxWidth","removeIcon","color","cursor","NewMessageCard","msg","message","onRead","classes","className","Chip","size","style","background","Category","toLowerCase","indexOf","label","Content","DoctorName","PharmacyName","onClick","useEffect","FetchNewMessages","loadingNewMessages","newMessages","length","map","m","key","Id","MarkMessageRead","AppState","username","role","this","localStorage","getItem","toggled","sidebarWidth","appContainer","document","getElementById","pageWidth","Math","max","body","scrollWidth","documentElement","offsetWidth","clientWidth","width","axios","get","clear","window","location","decorate","observable","Logout","action","ChangeWidth","DashboardStore","newAccountRequests","loadingNewAccountRequests","loadingDashboard","res","data","runInAction","id","post","NotificationManager","error","response","title","FetchNewAccountRequests","ManageUsersStore","allUsers","users","console","log","value","filter","u","Username","contact","password","type","doctorName","pharmacyName","pharmacyAddress","address","success","FetchAllUsers","loadingToggleActive","IsActive","SearchUsers","RegisterUser","ManageMedicinsStore","allMedicins","medicins","v","Name","name","FetchMedicins","ManageClassificationStore","selectedClassificationIndex","classifications","clsConditions","index","FetchConditions","trim","classification","unshift","params","headers","FetchClassifications","SelectClassification","StatisticsStore","prescriptionsUsage","medicinsUsage","prescriptionsPerClassification","from","to","date","format","getPrescriptionsUsage","getPrescriptionsPerClassification","getMedicinsUsage","mainContext","React","createContext","ContextProvider","props","Provider","ManageClassificationsStore","children","AccountRequestCard","requset","Type","Phone","Email","r","MarkAccountRequestRead","Dashboard","useContext","useState","Container","ActionBtn","elem","useRef","toggleShowLoading","loading","show","current","disabled","querySelector","display","ElementWithClassName","cloneElement","ref","LoadingMini","theme","useTheme","palette","primary","main","borderRadius","activeIcon","deactiveIcon","UserCard","user","onToggleActive","ToggleActive","SearchInput","search","setSearch","TextField","onChange","e","target","variant","NewUser","open","setOpen","userType","setUserType","setUsername","setContact","setDoctorName","setPharmacyName","setPharmacyAddress","setPassword","handleClose","isSubmit","Fab","aria-label","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","required","placeholder","InputProps","readOnly","Button","PasswordGenerator","generate","uppercase","FormControl","component","FormLabel","RadioGroup","defaultChecked","FormControlLabel","control","Radio","DialogActions","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","i","scope","SearchMedicins","NewMedicine","setName","ManageMedicins","LoadingPage","minHeight","fullPage","undefined","height","margin","labels","datasets","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","a","Object","keys","push","options","maintainAspectRatio","initialData","borderWidth","hoverBackgroundColor","hoverBorderColor","addMonths","Date","startDate","setStartDate","endDate","setEndDate","JSON","parse","stringify","setData","getData","useCallback","temp","Count","Grid","container","justify","alignItems","TabPanel","other","hidden","Box","p","a11yProps","Statistics","setValue","square","Tabs","event","newValue","Tab","root","borderBottom","transition","icon","ClassificationCard","isSelected","src","ImageUrl","alt","Typography","overflowY","c","ConditionCard","condition","setcondition","InputLabelProps","AddCondition","NewClassification","files","setFiles","formData","FormData","append","onSubmit","PaperProps","allowMultiple","maxFiles","labelIdle","onprocessfilestart","server","process","instantUpload","onupdatefiles","fileItems","fileItem","file","ClassificationsAndConditions","position","path","ManageUsers","Home","withRouter","setToggled","history","useHistory","onSelect","selected","onToggle","expanded","Toggle","Nav","defaultSelected","pathname","slice","eventKey","fontSize","App","marginLeft","library","add","faSmile","faAddressBook","AOS","init","offset","duration","easing","delay","interceptors","use","refreshToken","refTokenRes","setItem","config","Promise","resolve","reject","createMuiTheme","typography","fontFamily","join","secondary","overrides","MuiOutlinedInput","notchedOutline","MuiInputLabel","ScrollToTop","prevProps","scrollTo","Component","AppWrapper","ThemeProvider","ReactDOM","render"],"mappings":"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","file":"static/js/main.d8d3b1d8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst Header = ({ store }) => {\r\n  return <header></header>;\r\n};\r\n\r\nexport default observer(Header);\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return <footer />;\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { makeStyles, Chip } from \"@material-ui/core\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\n\r\nconst useStyle = makeStyles({\r\n  card: {\r\n    backgroundColor: \"#FFF\",\r\n    boxShadow: \"3px 5px 10px #9b9b9b\",\r\n    maxWidth: 700\r\n  },\r\n  removeIcon: {\r\n    color: \"red\",\r\n    cursor: \"pointer\"\r\n  }\r\n});\r\n\r\nconst selectColor = msg => {\r\n  if (msg.toLowerCase().indexOf(\"problem\") !== -1) return \"#f44336\";\r\n  if (msg.toLowerCase().indexOf(\"add\") !== -1) return \"#3d5afe\";\r\n  if (msg.toLowerCase().indexOf(\"feature\") !== -1) return \"#43a047\";\r\n  return \"#546e7a\";\r\n};\r\n\r\nconst NewMessageCard = ({ message, onRead }) => {\r\n  const classes = useStyle();\r\n  return (\r\n    <div className=\"col-12\">\r\n      <div\r\n        className={`${classes.card}  px-3 mb-4 py-3 row mx-0 justify-content-between`}\r\n      >\r\n        <div className=\"col-10\">\r\n          <div className=\"mb-2\">\r\n            <Chip\r\n              size=\"small\"\r\n              style={{\r\n                background: selectColor(message.Category),\r\n                color: \"#FFF\"\r\n              }}\r\n              label={message.Category}\r\n            />\r\n          </div>\r\n          <h5>{message.Content}</h5>\r\n          <span className=\"text-dark \">\r\n            {message.DoctorName && `Doctor ${message.DoctorName}`}\r\n            {message.PharmacyName && `Pharmacy ${message.PharmacyName}`}\r\n          </span>\r\n        </div>\r\n        <Clear\r\n          className={`${classes.removeIcon} align-self-center`}\r\n          onClick={onRead}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewMessageCard;\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport NewMessageCard from \"./NewMessageCard\";\r\nimport Email from \"@material-ui/icons/Email\";\r\n\r\nconst NewMessagesList = ({ store }) => {\r\n  useEffect(() => {\r\n    store.FetchNewMessages();\r\n  }, [store]);\r\n\r\n  if (store.loadingNewMessages)\r\n    return <h2 className=\"text-center py-5\">Loading...</h2>;\r\n\r\n  if (store.newMessages.length === 0)\r\n    return <h2 className=\"text-center py-5\">No New Messages...</h2>;\r\n\r\n  return (\r\n    <div className=\"row py-5 mx-0\">\r\n      <h5>\r\n        <Email /> You Have Some New Messages\r\n      </h5>\r\n      {store.newMessages.map(m => (\r\n        <NewMessageCard\r\n          key={m.Id}\r\n          message={m}\r\n          onRead={() => store.MarkMessageRead(m.Id)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(NewMessagesList);\r\n","import { observable, action, decorate } from \"mobx\";\r\n\r\nimport axios from \"axios\";\r\n\r\nclass AppState {\r\n  //Global\r\n  username = \"\";\r\n  role = \"\";\r\n\r\n  constructor() {\r\n    this.username = localStorage.getItem(\"username\");\r\n    this.role = localStorage.getItem(\"user-role\");\r\n  }\r\n\r\n  ChangeWidth(toggled) {\r\n    const sidebarWidth = toggled ? 240 : 64;\r\n    const appContainer = document.getElementById(\"app-container\");\r\n    const pageWidth = Math.max(\r\n      document.body.scrollWidth,\r\n      document.documentElement.scrollWidth,\r\n      document.body.offsetWidth,\r\n      document.documentElement.offsetWidth,\r\n      document.documentElement.clientWidth\r\n    );\r\n    appContainer.style.width = `${pageWidth - sidebarWidth}px`;\r\n  }\r\n\r\n  async Logout() {\r\n    try {\r\n      await axios.get(\"/api/users/logout\");\r\n    } catch (error) {\r\n    } finally {\r\n      localStorage.clear();\r\n      window.location = \"/login\";\r\n    }\r\n  }\r\n}\r\n\r\ndecorate(AppState, {\r\n  username: observable,\r\n  role: observable,\r\n  Logout: action,\r\n  ChangeWidth: action,\r\n});\r\n\r\nexport default new AppState();\r\n// const todoStoreInstance = new NewPrescription();\r\n// export default todoStoreInstance;\r\n","import { observable, action, decorate, runInAction } from \"mobx\";\r\nimport { NotificationManager } from \"react-notifications\";\r\n\r\nimport axios from \"axios\";\r\n\r\nclass DashboardStore {\r\n  //Dashboard\r\n  newMessages = [];\r\n  loadingNewMessages = true;\r\n  newAccountRequests = [];\r\n  loadingNewAccountRequests = true;\r\n  loadingDashboard = true;\r\n\r\n  async FetchNewMessages() {\r\n    try {\r\n      this.loadingNewMessages = true;\r\n      const res = await axios.get(\"/api/admin/new-messages\");\r\n      const { data } = res.data;\r\n      runInAction(() => {\r\n        this.newMessages = data;\r\n        this.loadingNewMessages = false;\r\n      });\r\n    } catch (error) {\r\n      this.loadingNewMessages = false;\r\n    }\r\n  }\r\n\r\n  async MarkMessageRead(id) {\r\n    try {\r\n      await axios.post(\"/api/admin/read-message\", { id });\r\n      this.FetchNewMessages();\r\n    } catch (error) {}\r\n  }\r\n\r\n  async FetchNewAccountRequests() {\r\n    try {\r\n      this.loadingNewAccountRequests = true;\r\n      const res = await axios.get(\"/api/admin/new-account-requests\");\r\n      const { data } = res.data;\r\n      runInAction(() => {\r\n        this.newAccountRequests = data;\r\n        this.loadingNewAccountRequests = false;\r\n      });\r\n    } catch (error) {\r\n      NotificationManager.error(\r\n        error.response.data.message,\r\n        error.response.data.title\r\n      );\r\n      this.loadingNewAccountRequests = false;\r\n    }\r\n  }\r\n\r\n  async MarkAccountRequestRead(id) {\r\n    try {\r\n      await axios.post(\"/api/admin/read-account-request\", { id });\r\n      this.FetchNewAccountRequests();\r\n    } catch (error) {\r\n      NotificationManager.error(\r\n        error.response.data.message,\r\n        error.response.data.title\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\ndecorate(DashboardStore, {\r\n  newMessages: observable,\r\n  loadingNewMessages: observable,\r\n  newAccountRequests: observable,\r\n  loadingNewAccountRequests: observable,\r\n  FetchNewAccountRequests: action\r\n});\r\n\r\nexport default new DashboardStore();\r\n// const todoStoreInstance = new NewPrescription();\r\n// export default todoStoreInstance;\r\n","import { observable, action, decorate, runInAction } from \"mobx\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport axios from \"axios\";\r\n\r\nclass ManageUsersStore {\r\n  allUsers = [];\r\n  users = [];\r\n\r\n  async FetchAllUsers() {\r\n    try {\r\n      const res = await axios.get(\"/api/users\");\r\n      const { data } = res.data;\r\n      runInAction(() => {\r\n        this.allUsers = data;\r\n        console.log(data);\r\n\r\n        this.users = this.allUsers;\r\n      });\r\n    } catch (error) {}\r\n  }\r\n\r\n  SearchUsers(value) {\r\n    this.users = this.allUsers.filter((u) => {\r\n      if (u.Username.toLowerCase().indexOf(value.toLowerCase()) !== -1)\r\n        return true;\r\n      if (u.DoctorName) {\r\n        return u.DoctorName.toLowerCase().indexOf(value.toLowerCase()) !== -1;\r\n      }\r\n      if (u.PharmacyName) {\r\n        return u.PharmacyName.toLowerCase().indexOf(value.toLowerCase()) !== -1;\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n\r\n  async RegisterUser(\r\n    username,\r\n    contact,\r\n    password,\r\n    type,\r\n    doctorName,\r\n    pharmacyName,\r\n    pharmacyAddress\r\n  ) {\r\n    try {\r\n      await axios.post(\"/api/users/register\", {\r\n        username,\r\n        contact,\r\n        password,\r\n        type,\r\n        doctorName,\r\n        pharmacyName,\r\n        address: pharmacyAddress,\r\n      });\r\n\r\n      NotificationManager.success(\"User Registered Successfully\");\r\n      this.FetchAllUsers();\r\n      runInAction(() => {});\r\n    } catch (error) {\r\n      NotificationManager.error(\r\n        error.response.data.message,\r\n        error.response.data.title\r\n      );\r\n    }\r\n  }\r\n\r\n  async ToggleActive(id) {\r\n    try {\r\n      this.users = this.users.map((u) => {\r\n        if (u.Id === id) u.loadingToggleActive = true;\r\n        return u;\r\n      });\r\n      this.loadingToggleActive = true;\r\n      await axios.post(\"/api/users/toggle-active-state\", {\r\n        id,\r\n      });\r\n      runInAction(() => {\r\n        this.users = this.users.map((u) => {\r\n          if (u.Id === id) u.loadingToggleActive = false;\r\n          return u;\r\n        });\r\n        this.users = this.users.map((u) => {\r\n          if (u.Id === id) u.IsActive = !u.IsActive;\r\n          return u;\r\n        });\r\n      });\r\n    } catch (error) {}\r\n  }\r\n}\r\n\r\ndecorate(ManageUsersStore, {\r\n  users: observable,\r\n  allUsers: observable,\r\n  FetchAllUsers: action,\r\n  SearchUsers: action,\r\n  RegisterUser: action,\r\n});\r\n\r\nexport default new ManageUsersStore();\r\n// const todoStoreInstance = new NewPrescription();\r\n// export default todoStoreInstance;\r\n","import { observable, action, decorate, runInAction } from \"mobx\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport axios from \"axios\";\r\n\r\nclass ManageMedicinsStore {\r\n  allMedicins = [];\r\n  medicins = [];\r\n\r\n  async FetchMedicins() {\r\n    try {\r\n      const res = await axios.get(\"/api/medicins\");\r\n      const { data } = res.data;\r\n      runInAction(() => {\r\n        this.allMedicins = data;\r\n        this.medicins = data;\r\n      });\r\n    } catch (error) {}\r\n  }\r\n\r\n  SearchMedicins(v) {\r\n    this.medicins = this.allMedicins.filter(\r\n      m => m.Name.toLowerCase().indexOf(v.toLowerCase()) !== -1\r\n    );\r\n  }\r\n\r\n  async NewMedicine(name) {\r\n    try {\r\n      await axios.post(\"/api/medicins/new\", {\r\n        name\r\n      });\r\n\r\n      NotificationManager.success(\"Medicine Added Successfully\");\r\n      this.FetchMedicins();\r\n    } catch (error) {\r\n      NotificationManager.error(\r\n        error.response.data.message,\r\n        error.response.data.title\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\ndecorate(ManageMedicinsStore, {\r\n  medicins: observable,\r\n  FetchMedicins: action\r\n});\r\n\r\nexport default new ManageMedicinsStore();\r\n","import { observable, action, decorate, runInAction } from \"mobx\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport axios from \"axios\";\r\n\r\nclass ManageClassificationStore {\r\n  selectedClassificationIndex = null;\r\n  classifications = [];\r\n  clsConditions = {};\r\n\r\n  SelectClassification(index) {\r\n    this.selectedClassificationIndex = index;\r\n    this.FetchConditions();\r\n  }\r\n\r\n  async FetchClassifications() {\r\n    try {\r\n      const res = await axios.get(\"/api/medicins/classifications\");\r\n      const { data } = res.data;\r\n      runInAction(() => {\r\n        this.classifications = data;\r\n      });\r\n    } catch (error) {}\r\n  }\r\n\r\n  async AddCondition(name) {\r\n    if (name.trim().length < 3) return;\r\n\r\n    try {\r\n      await axios.post(\"/api/medicins/new-condition\", {\r\n        name,\r\n        classification: this.classifications[this.selectedClassificationIndex]\r\n          .Id,\r\n      });\r\n\r\n      NotificationManager.success(\"Condition Added Successfully\");\r\n      runInAction(() => {\r\n        this.clsConditions[this.selectedClassificationIndex].unshift({\r\n          Name: name,\r\n        });\r\n      });\r\n      return true;\r\n    } catch (error) {\r\n      NotificationManager.error(\r\n        error.response.data.message,\r\n        error.response.data.title\r\n      );\r\n    }\r\n  }\r\n\r\n  async FetchConditions() {\r\n    try {\r\n      if (this.clsConditions[this.selectedClassificationIndex]) return;\r\n\r\n      const res = await axios.get(\"/api/medicins/conditions\", {\r\n        params: {\r\n          classification: this.classifications[this.selectedClassificationIndex]\r\n            .Id,\r\n        },\r\n      });\r\n      const { data } = res.data;\r\n      runInAction(() => {\r\n        this.clsConditions[this.selectedClassificationIndex] = data;\r\n      });\r\n    } catch (error) {}\r\n  }\r\n\r\n  async NewClassification(data) {\r\n    try {\r\n      await axios.post(\"/api/medicins/new-classification\", data, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n\r\n      this.FetchClassifications();\r\n      NotificationManager.success(\"Classification Added Successfully\");\r\n    } catch (error) {\r\n      NotificationManager.error(\r\n        error.response.data.message,\r\n        error.response.data.title\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\ndecorate(ManageClassificationStore, {\r\n  classifications: observable,\r\n  clsConditions: observable,\r\n  selectedClassificationIndex: observable,\r\n  SelectClassification: action,\r\n});\r\n\r\nexport default new ManageClassificationStore();\r\n","import { observable, action, decorate, runInAction } from \"mobx\";\r\nimport date from \"date-and-time\";\r\n\r\nimport axios from \"axios\";\r\n\r\nclass StatisticsStore {\r\n  prescriptionsUsage = [];\r\n  medicinsUsage = [];\r\n  prescriptionsPerClassification = [];\r\n\r\n  async getPrescriptionsUsage() {\r\n    try {\r\n      if (this.prescriptionsUsage.length > 0) return;\r\n\r\n      const res = await axios.get(\"/api/admin/prescriptions-usage\");\r\n      const { data } = res.data;\r\n      runInAction(() => {\r\n        this.prescriptionsUsage = data;\r\n      });\r\n    } catch (error) {\r\n      this.loadingNewMessages = false;\r\n    }\r\n  }\r\n\r\n  async getPrescriptionsPerClassification(from, to) {\r\n    try {\r\n      const res = await axios.get(\r\n        \"/api/admin/prescriptions-per-classification-count\",\r\n        {\r\n          params: {\r\n            to: date.format(to, \"YYYY-MM-DD\"),\r\n            from: date.format(from, \"YYYY-MM-DD\"),\r\n          },\r\n        }\r\n      );\r\n      const { data } = res.data;\r\n\r\n      runInAction(() => {\r\n        this.prescriptionsPerClassification = data;\r\n      });\r\n    } catch (error) {\r\n      this.loadingNewMessages = false;\r\n    }\r\n  }\r\n\r\n  async getMedicinsUsage(from, to) {\r\n    try {\r\n      const res = await axios.get(\"/api/admin/medicins-usage\", {\r\n        params: {\r\n          to: date.format(to, \"YYYY-MM-DD\"),\r\n          from: date.format(from, \"YYYY-MM-DD\"),\r\n        },\r\n      });\r\n      const { data } = res.data;\r\n\r\n      runInAction(() => {\r\n        this.medicinsUsage = data;\r\n      });\r\n    } catch (error) {\r\n      this.loadingNewMessages = false;\r\n    }\r\n  }\r\n}\r\n\r\ndecorate(StatisticsStore, {\r\n  prescriptionsUsage: observable,\r\n  medicinsUsage: observable,\r\n  prescriptionsPerClassification: observable,\r\n  getPrescriptionsUsage: action,\r\n  getPrescriptionsPerClassification: action,\r\n  getMedicinsUsage: action,\r\n});\r\n\r\nexport default new StatisticsStore();\r\n","import React from \"react\";\r\nimport AppState from \"./AppState\";\r\nimport DashboardStore from \"./DashboardStore\";\r\nimport ManageUsersStore from \"./ManageUsersStore\";\r\nimport ManageMedicinsStore from \"./ManageMedicinsStore\";\r\nimport ManageClassificationsStore from \"./ManageClassifications\";\r\nimport StatisticsStore from \"./StatisticsStore\";\r\n\r\nexport const mainContext = React.createContext();\r\n\r\nexport const ContextProvider = (props) => {\r\n  return (\r\n    <mainContext.Provider\r\n      value={{\r\n        AppState,\r\n        DashboardStore,\r\n        ManageUsersStore,\r\n        ManageMedicinsStore,\r\n        ManageClassificationsStore,\r\n        StatisticsStore,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </mainContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\n\r\nconst useStyle = makeStyles({\r\n  card: {\r\n    backgroundColor: \"#FFF\",\r\n    boxShadow: \"3px 5px 10px #9b9b9b\",\r\n    maxWidth: 700\r\n  },\r\n  removeIcon: {\r\n    color: \"red\",\r\n    cursor: \"pointer\"\r\n  }\r\n});\r\n\r\nconst AccountRequestCard = ({ requset, onRead }) => {\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <div className=\"col-12\">\r\n      <div\r\n        className={`${classes.card}  px-3 mb-4 py-3 row mx-0 justify-content-between`}\r\n      >\r\n        <div>\r\n          <div>\r\n            <span className=\"text-info \">{requset.Type}</span>\r\n            <br />\r\n            <span className=\"text-dark \">{requset.Name}</span>\r\n          </div>\r\n          <h5>{requset.Phone}</h5>\r\n          <h5>{requset.Email}</h5>\r\n        </div>\r\n        <Clear\r\n          className={`${classes.removeIcon} align-self-center`}\r\n          onClick={onRead}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountRequestCard;\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport AccountRequestCard from \"./AccountRequestCard\";\r\nimport PersonAdd from \"@material-ui/icons/PersonAdd\";\r\n\r\nconst NewAccountRequests = ({ store }) => {\r\n  useEffect(() => {\r\n    store.FetchNewAccountRequests();\r\n  }, [store]);\r\n\r\n  if (store.loadingNewAccountRequests)\r\n    return <h2 className=\"text-center py-5\">Loading Account Requests...</h2>;\r\n\r\n  if (store.newAccountRequests.length === 0)\r\n    return <h2 className=\"text-center py-5\">No New Requests...</h2>;\r\n\r\n  return (\r\n    <div className=\"row py-5 mx-0\">\r\n      <h5>\r\n        {\" \"}\r\n        <PersonAdd /> You have New Account Requests\r\n      </h5>\r\n      {store.newAccountRequests.map(r => (\r\n        <AccountRequestCard\r\n          key={r.Id}\r\n          requset={r}\r\n          onRead={() => store.MarkAccountRequestRead(r.Id)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(NewAccountRequests);\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport NewMessagesList from \"./Partials/NewMessagesList\";\r\nimport { mainContext } from \"../../stores/Context\";\r\nimport NewAccountRequests from \"./Partials/NewAccountRequests\";\r\n\r\nconst Dashboard = () => {\r\n  const { DashboardStore } = useContext(mainContext);\r\n  const [store] = useState(DashboardStore);\r\n\r\n  return (\r\n    <Container className=\"py-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-lg-6\">\r\n          <NewMessagesList store={store} />\r\n        </div>\r\n        <div className=\"col-12 col-lg-6\">\r\n          <NewAccountRequests store={store} />\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect, useRef } from \"react\";\r\n\r\nconst ActionBtn = props => {\r\n  const elem = useRef(null);\r\n\r\n  useEffect(() => {\r\n    toggleShowLoading(props.loading);\r\n  }, [props.loading]);\r\n\r\n  const toggleShowLoading = (show = false) => {\r\n    if (!elem.current) return;\r\n    if (show) {\r\n      elem.current.disabled = true;\r\n      elem.current.querySelector(\".loading\").style.display = \"block\";\r\n      elem.current.querySelector(\".content\").style.display = \"none\";\r\n    } else {\r\n      elem.current.disabled = false;\r\n      elem.current.querySelector(\".loading\").style.display = \"none\";\r\n      elem.current.querySelector(\".content\").style.display = \"block\";\r\n    }\r\n  };\r\n\r\n  let ElementWithClassName = React.cloneElement(props.children, {\r\n    ref: elem\r\n  });\r\n\r\n  return <>{ElementWithClassName}</>;\r\n};\r\n\r\nexport default ActionBtn;\r\n","import React from \"react\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\nimport { useTheme } from \"@material-ui/core\";\r\n\r\nconst LoadingMini = props => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <div className=\"align-self-center\">\r\n      <PulseLoader\r\n        //  css={override}\r\n        {...props}\r\n        size={5}\r\n        color={theme.palette.primary.main}\r\n        loading={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingMini;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ActionBtn from \"../../Shared/ActionBtn\";\r\nimport LoadingMini from \"../../Shared/LoadingMini\";\r\n\r\nconst useStyle = makeStyles({\r\n  card: {\r\n    backgroundColor: \"#FFF\",\r\n    boxShadow: \"3px 5px 10px #939393\",\r\n    borderRadius: 5,\r\n  },\r\n  activeIcon: {\r\n    color: \"green\",\r\n    cursor: \"pointer\",\r\n  },\r\n  deactiveIcon: {\r\n    color: \"red\",\r\n    cursor: \"pointer\",\r\n  },\r\n});\r\n\r\nconst UserCard = ({ user, onToggleActive }) => {\r\n  const classes = useStyle();\r\n  return (\r\n    <div\r\n      className={`${classes.card} col-12 mb-2 py-3 row mx-0 justify-content-between`}\r\n    >\r\n      <div>\r\n        <div>\r\n          <span className=\"text-info \">{user.Username}</span>\r\n          <span className=\"text-dark mx-4\">\r\n            {user.DoctorName && `Doctor ${user.DoctorName}`}\r\n            {user.PharmacyName && `Pharmacy ${user.PharmacyName}`}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <ActionBtn loading={user.loadingToggleActive}>\r\n        <button className=\"btn-none\">\r\n          <span className=\"content\">\r\n            {user.IsActive ? (\r\n              <Check\r\n                className={`${classes.activeIcon} align-self-center`}\r\n                onClick={onToggleActive}\r\n              />\r\n            ) : (\r\n              <Clear\r\n                className={`${classes.deactiveIcon} align-self-center`}\r\n                onClick={onToggleActive}\r\n              />\r\n            )}\r\n          </span>\r\n          <div className=\"loading\">\r\n            <LoadingMini color={\"#FFF\"} />\r\n          </div>\r\n        </button>\r\n      </ActionBtn>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport UserCard from \"./UserCard\";\r\n\r\nconst UsersList = ({ store }) => {\r\n  useEffect(() => {\r\n    store.FetchAllUsers();\r\n  }, [store]);\r\n\r\n  return (\r\n    <div style={{ maxWidth: 600 }} className=\"mx-auto py-5\">\r\n      {store.users.map(u => (\r\n        <UserCard\r\n          key={u.Id}\r\n          user={u}\r\n          onToggleActive={() => store.ToggleActive(u.Id)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(UsersList);\r\n","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\n\r\nconst SearchInput = ({ store }) => {\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  return (\r\n    <div\r\n      className=\"row mx-auto justify-content-center\"\r\n      style={{ maxWidth: 280 }}\r\n    >\r\n      <TextField\r\n        id=\"search-users\"\r\n        label=\"Search Users\"\r\n        value={search}\r\n        onChange={e => {\r\n          setSearch(e.target.value);\r\n          store.SearchUsers(e.target.value);\r\n        }}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        className=\" mx-auto mb-3 col-12 \"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport {\r\n  Fab,\r\n  FormControl,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup\r\n} from \"@material-ui/core\";\r\nimport PersonAdd from \"@material-ui/icons/PersonAdd\";\r\nimport PasswordGenerator from \"generate-password\";\r\n\r\nconst NewUser = ({ store }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [userType, setUserType] = React.useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [contact, setContact] = useState(\"\");\r\n  const [doctorName, setDoctorName] = useState(\"\");\r\n  const [pharmacyName, setPharmacyName] = useState(\"\");\r\n  const [pharmacyAddress, setPharmacyAddress] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = isSubmit => {\r\n    setOpen(false);\r\n    if (isSubmit) {\r\n      console.log(\"ssss\");\r\n      store.RegisterUser(\r\n        username,\r\n        contact,\r\n        password,\r\n        userType,\r\n        doctorName,\r\n        pharmacyName,\r\n        pharmacyAddress\r\n      );\r\n    }\r\n  };\r\n\r\n  const generatePassword = () => {\r\n    setPassword(\r\n      PasswordGenerator.generate({\r\n        length: 8,\r\n        uppercase: false\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Fab\r\n        color=\"primary\"\r\n        aria-label=\"add\"\r\n        className=\"fab-btn\"\r\n        onClick={handleClickOpen}\r\n      >\r\n        <PersonAdd />\r\n      </Fab>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Register New User</DialogTitle>\r\n        <DialogContent>\r\n          <div className=\"row justify-content-between mx-0 px-2\">\r\n            <TextField\r\n              label=\"Username\"\r\n              type=\"text\"\r\n              className=\"col-12 col-md-5 mb-3\"\r\n              color=\"primary\"\r\n              required\r\n              value={username}\r\n              onChange={e => setUsername(e.target.value)}\r\n            />\r\n            <TextField\r\n              label=\"Contact Info\"\r\n              placeholder=\"0968443292\"\r\n              type=\"text\"\r\n              className=\"col-12 col-md-5 mb-3\"\r\n              value={contact}\r\n              onChange={e => setContact(e.target.value)}\r\n            />\r\n            <div className=\"col-12 mb-3 px-0 row mx-0 \">\r\n              <TextField\r\n                label=\"Password\"\r\n                type=\"text\"\r\n                className=\"col-12 col-md-8\"\r\n                value={password}\r\n                InputProps={{\r\n                  readOnly: true\r\n                }}\r\n                color=\"primary\"\r\n                required\r\n              />\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\"mx-3  align-self-center\"\r\n                onClick={generatePassword}\r\n              >\r\n                Generate\r\n              </Button>\r\n            </div>\r\n            <FormControl component=\"fieldset\" className=\"my-3 col-12\">\r\n              <FormLabel component=\"legend\">User Type</FormLabel>\r\n              <RadioGroup\r\n                aria-label=\"gender\"\r\n                name=\"gender1\"\r\n                value={userType}\r\n                onChange={e => setUserType(e.target.value)}\r\n                className=\"row mx-0 flex-row\"\r\n                defaultChecked\r\n              >\r\n                <FormControlLabel\r\n                  value=\"Admin\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Admin\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"Doctor\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Doctor\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"Pharmacy\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Pharmacy\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n            {userType === \"Doctor\" && (\r\n              <TextField\r\n                label=\"Doctor Name\"\r\n                type=\"text\"\r\n                className=\"col-12 mb-3\"\r\n                value={doctorName}\r\n                onChange={e => setDoctorName(e.target.value)}\r\n              />\r\n            )}\r\n            {userType === \"Pharmacy\" && (\r\n              <>\r\n                <TextField\r\n                  label=\"Pharmacy Name\"\r\n                  type=\"text\"\r\n                  className=\"col-12 mb-3\"\r\n                  value={pharmacyName}\r\n                  onChange={e => setPharmacyName(e.target.value)}\r\n                />\r\n                <TextField\r\n                  label=\"Pharmacy Address\"\r\n                  type=\"text\"\r\n                  className=\"col-12 mb-3\"\r\n                  value={pharmacyAddress}\r\n                  onChange={e => setPharmacyAddress(e.target.value)}\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => handleClose(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={() => handleClose(true)} color=\"primary\">\r\n            Register\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewUser;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { mainContext } from \"../../stores/Context\";\r\nimport { observer } from \"mobx-react\";\r\nimport UsersList from \"./Partials/UsersList\";\r\nimport SearchInput from \"./Partials/SearchInput\";\r\nimport NewUser from \"./Partials/NewUser\";\r\n\r\nconst ManageUsers = () => {\r\n  const { ManageUsersStore } = useContext(mainContext);\r\n  const [store] = useState(ManageUsersStore);\r\n\r\n  return (\r\n    <div className=\"py-5\">\r\n      <NewUser store={store} />\r\n      <SearchInput store={store} />\r\n      <UsersList store={store} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(ManageUsers);\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport {\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  TableContainer,\r\n  Paper\r\n} from \"@material-ui/core\";\r\n\r\nconst MedicinsList = ({ store }) => {\r\n  useEffect(() => {\r\n    store.FetchMedicins();\r\n  }, [store]);\r\n\r\n  return (\r\n    <TableContainer\r\n      component={Paper}\r\n      style={{ maxWidth: 500 }}\r\n      className=\"mx-auto mt-4\"\r\n    >\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Id</TableCell>\r\n            <TableCell>Medicine Name</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {store.medicins.map((m, i) => (\r\n            <TableRow key={m.Id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {i + 1}\r\n              </TableCell>\r\n              <TableCell>{m.Name}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default observer(MedicinsList);\r\n","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\n\r\nconst SearchInput = ({ store }) => {\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  return (\r\n    <div\r\n      className=\"row mx-auto justify-content-center\"\r\n      style={{ maxWidth: 280 }}\r\n    >\r\n      <TextField\r\n        id=\"search-meds\"\r\n        label=\"Search Medicins\"\r\n        value={search}\r\n        onChange={e => {\r\n          setSearch(e.target.value);\r\n          store.SearchMedicins(e.target.value);\r\n        }}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        className=\" mx-auto mb-3 col-12 \"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Add from \"@material-ui/icons/Add\";\r\n\r\nconst NewMedicine = ({ store }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = isSubmit => {\r\n    setOpen(false);\r\n    if (isSubmit === true) {\r\n      store.NewMedicine(name);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Fab\r\n        color=\"primary\"\r\n        aria-label=\"add\"\r\n        className=\"fab-btn\"\r\n        variant=\"extended\"\r\n        onClick={handleClickOpen}\r\n      >\r\n        <Add /> New Medicine\r\n      </Fab>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">New Medicine</DialogTitle>\r\n        <DialogContent>\r\n          <div className=\"row justify-content-between mx-0 px-2\">\r\n            <TextField\r\n              label=\"Medicine Name\"\r\n              type=\"text\"\r\n              className=\"col-12  mb-3\"\r\n              color=\"primary\"\r\n              value={name}\r\n              onChange={e => setName(e.target.value)}\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={() => handleClose(true)} color=\"primary\">\r\n            Register\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewMedicine;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { mainContext } from \"../../stores/Context\";\r\nimport MedicinsList from \"./Partials/MedicinsList\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport SearchInput from \"./Partials/SearchInput\";\r\nimport NewMedicine from \"./Partials/NewMedicine\";\r\n\r\nconst ManageMedicins = () => {\r\n  const { ManageMedicinsStore } = useContext(mainContext);\r\n  const [store] = useState(ManageMedicinsStore);\r\n  return (\r\n    <Container className=\"py-5\">\r\n      <SearchInput store={store} />\r\n      <MedicinsList store={store} />\r\n      <NewMedicine store={store} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ManageMedicins;\r\n","import React from \"react\";\r\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\r\nimport { useTheme } from \"@material-ui/core\";\r\n\r\nconst LoadingPage = props => {\r\n  const theme = useTheme();\r\n  return (\r\n    <div\r\n      className=\"row justify-content-center align-content-center py-5\"\r\n      style={{ minHeight: props.fullPage ? \"88vh\" : undefined }}\r\n    >\r\n      <ScaleLoader\r\n        //  css={override}\r\n        //        size={5}\r\n        height={55}\r\n        width={8}\r\n        margin={3}\r\n        color={theme.palette.primary.main}\r\n        loading={true}\r\n        {...props}\r\n      />\r\n      <h2 className=\"text-primary col-12 text-center py-2\">\r\n        {props.message || \"Loading\"}\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingPage;\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport LoadingPage from \"../../Shared/LoadingPage\";\r\n\r\nconst data = {\r\n  labels: [],\r\n  datasets: [\r\n    {\r\n      label: \"Prescriptions Dispensed in the last 6 months\",\r\n      fill: false,\r\n      lineTension: 0.1,\r\n      backgroundColor: \"rgba(75,192,192,0.4)\",\r\n      borderColor: \"#4caf50\",\r\n      borderCapStyle: \"butt\",\r\n      borderDash: [],\r\n      borderDashOffset: 2.0,\r\n      borderJoinStyle: \"miter\",\r\n      pointBorderColor: \"rgba(75,192,192,1)\",\r\n      pointBackgroundColor: \"#fff\",\r\n      pointBorderWidth: 1,\r\n      pointHoverRadius: 5,\r\n      pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n      pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 1,\r\n      pointHitRadius: 10,\r\n      data: [],\r\n    },\r\n  ],\r\n};\r\n\r\nconst SystemUsage = ({ store }) => {\r\n  useEffect(() => {\r\n    (async () => {\r\n      await store.getPrescriptionsUsage();\r\n      data.labels = [];\r\n      data.datasets[0].data = [];\r\n      for (const date of Object.keys(store.prescriptionsUsage)) {\r\n        data.labels.push(date);\r\n        data.datasets[0].data.push(store.prescriptionsUsage[date]);\r\n      }\r\n    })();\r\n  }, [store]);\r\n\r\n  if (store.prescriptionsUsage.length === 0)\r\n    return <LoadingPage message=\"Loading Report\" />;\r\n\r\n  return (\r\n    <div>\r\n      <h2>System Usage</h2>\r\n      <Line\r\n        data={data}\r\n        width={100}\r\n        height={450}\r\n        options={{\r\n          maintainAspectRatio: false,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(SystemUsage);\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport LoadingPage from \"../../Shared/LoadingPage\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport date from \"date-and-time\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport { useCallback } from \"react\";\r\n\r\nconst initialData = {\r\n  labels: [],\r\n  datasets: [\r\n    {\r\n      label: \"Prescriptions Per Classification\",\r\n      backgroundColor: \"rgba(255,99,132,0.5)\",\r\n      borderColor: \"rgba(255,99,132,1)\",\r\n      borderWidth: 1,\r\n      hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n      hoverBorderColor: \"rgba(255,99,132,1)\",\r\n      data: [],\r\n    },\r\n  ],\r\n};\r\n\r\nconst PrescriptionsPerClassification = ({ store }) => {\r\n  const [startDate, setStartDate] = React.useState(\r\n    date.addMonths(new Date(), -6)\r\n  );\r\n  const [endDate, setEndDate] = React.useState(new Date());\r\n\r\n  const [data, setData] = React.useState(\r\n    JSON.parse(JSON.stringify(initialData))\r\n  );\r\n\r\n  const getData = useCallback(() => {\r\n    store.getPrescriptionsPerClassification(startDate, endDate);\r\n  }, [store, startDate, endDate]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [getData]);\r\n\r\n  useEffect(() => {\r\n    let temp = JSON.parse(JSON.stringify(initialData));\r\n\r\n    for (const e of store.prescriptionsPerClassification) {\r\n      temp.labels.push(e.Name);\r\n      temp.datasets[0].data.push(e.Count);\r\n    }\r\n    setData(temp);\r\n  }, [store.prescriptionsPerClassification]);\r\n\r\n  if (store.prescriptionsPerClassification.length === 0)\r\n    return <LoadingPage message=\"Loading Report\" />;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Prescriptions Per Classification</h2>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        from:{\" \"}\r\n        <DatePicker\r\n          className=\"mx-3\"\r\n          value={startDate}\r\n          onChange={(date) => setStartDate(date)}\r\n        />\r\n        to:{\" \"}\r\n        <DatePicker\r\n          className=\"mx-3\"\r\n          value={endDate}\r\n          onChange={(date) => setEndDate(date)}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={getData}>\r\n          Go\r\n        </Button>\r\n      </Grid>\r\n      <Bar\r\n        data={data}\r\n        width={100}\r\n        height={200}\r\n        options={{\r\n          maintainAspectRatio: false,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(PrescriptionsPerClassification);\r\n","import React, { useEffect, useCallback } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport LoadingPage from \"../../Shared/LoadingPage\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport date from \"date-and-time\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\n\r\nconst initialData = {\r\n  labels: [],\r\n  datasets: [\r\n    {\r\n      label: \"Most Used Medicins\",\r\n      backgroundColor: \"rgba(203, 58, 183, 0.62)\",\r\n      borderColor: \"rgba(203, 58, 183, 0.92)\",\r\n      borderWidth: 1,\r\n      hoverBackgroundColor: \"rgba(203, 58, 183, 0.42)\",\r\n      hoverBorderColor: \"rgba(203, 58, 183, 0.72)\",\r\n      data: [],\r\n    },\r\n  ],\r\n};\r\n\r\nconst MedicinsUsage = ({ store }) => {\r\n  const [startDate, setStartDate] = React.useState(\r\n    date.addMonths(new Date(), -6)\r\n  );\r\n  const [endDate, setEndDate] = React.useState(new Date());\r\n\r\n  const [data, setData] = React.useState(\r\n    JSON.parse(JSON.stringify(initialData))\r\n  );\r\n\r\n  const getData = useCallback(() => {\r\n    store.getMedicinsUsage(startDate, endDate);\r\n  }, [store, startDate, endDate]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [getData]);\r\n\r\n  useEffect(() => {\r\n    let temp = JSON.parse(JSON.stringify(initialData));\r\n\r\n    for (const e of store.medicinsUsage) {\r\n      temp.labels.push(e.Name);\r\n      temp.datasets[0].data.push(e.Count);\r\n    }\r\n    setData(temp);\r\n  }, [store.medicinsUsage]);\r\n\r\n  if (store.medicinsUsage.length === 0)\r\n    return <LoadingPage message=\"Loading Report\" />;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Medicins Usage</h2>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        from:{\" \"}\r\n        <DatePicker\r\n          className=\"mx-3\"\r\n          value={startDate}\r\n          onChange={(date) => setStartDate(date)}\r\n        />\r\n        to:{\" \"}\r\n        <DatePicker\r\n          className=\"mx-3\"\r\n          value={endDate}\r\n          onChange={(date) => setEndDate(date)}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={getData}>\r\n          Go\r\n        </Button>\r\n      </Grid>\r\n      <Bar\r\n        data={data}\r\n        width={100}\r\n        height={200}\r\n        options={{\r\n          maintainAspectRatio: false,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(MedicinsUsage);\r\n","import React, { useContext, useState } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { Box, Paper } from \"@material-ui/core\";\r\nimport SystemUsage from \"./Partials/SystemUsage\";\r\nimport { mainContext } from \"../../stores/Context\";\r\nimport PrescriptionsPerClassification from \"./Partials/PrescriptionsPerClassification\";\r\nimport MedicinsUsage from \"./Partials/MedicinsUsage\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`wrapped-tabpanel-${index}`}\r\n      aria-labelledby={`wrapped-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `wrapped-tab-${index}`,\r\n    \"aria-controls\": `wrapped-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst Statistics = () => {\r\n  const [value, setValue] = React.useState(\"system-usage\");\r\n  const { StatisticsStore } = useContext(mainContext);\r\n  const [store] = useState(StatisticsStore);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Container className=\"py-5\">\r\n      <Paper square>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"wrapped label tabs example\"\r\n        >\r\n          <Tab\r\n            value=\"system-usage\"\r\n            label=\"System Usage\"\r\n            {...a11yProps(\"system-usage\")}\r\n          />\r\n          <Tab\r\n            value=\"prescription/classification\"\r\n            label=\"Prescriptions/Classification\"\r\n            {...a11yProps(\"prescription/classification\")}\r\n          />{\" \"}\r\n          <Tab\r\n            value=\"medicins-usage\"\r\n            label=\"Medicins Usage\"\r\n            {...a11yProps(\"medicins-usage\")}\r\n          />\r\n        </Tabs>\r\n      </Paper>\r\n      <TabPanel value={value} index=\"system-usage\">\r\n        <SystemUsage store={store} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index=\"prescription/classification\">\r\n        <PrescriptionsPerClassification store={store} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index=\"medicins-usage\">\r\n        <MedicinsUsage store={store} />\r\n      </TabPanel>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport { Typography, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles({\r\n  root: () => ({\r\n    borderBottom: \"1px solid\",\r\n    cursor: \"pointer\",\r\n    transition: \"transform .5s ease-in-out\",\r\n  }),\r\n\r\n  icon: {\r\n    width: 50,\r\n    height: 50,\r\n    margin: \"0 20px\",\r\n    borderRadius: \"50%\",\r\n  },\r\n});\r\n\r\nconst ClassificationCard = ({ onClick, data, isSelected }) => {\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <div\r\n      className={`py-3 px-2 row mx-0  ${classes.root} ${\r\n        isSelected ? \" bg-primary text-white\" : \"\"\r\n      }`}\r\n      onClick={onClick}\r\n    >\r\n      <div className={classes.icon}>\r\n        <img src={data.ImageUrl} alt={data.Name} />\r\n      </div>\r\n      <Typography variant=\"h6\">{data.Name}</Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClassificationCard;\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport ClassificationCard from \"./ClassificationCard\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst ClassificationsSection = ({ store }) => {\r\n  useEffect(() => {\r\n    store.FetchClassifications();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\" col-12 col-md-6\"\r\n      style={{ height: \"100%\", overflowY: \"auto\" }}\r\n    >\r\n      {store.classifications.map((c, i) => (\r\n        <ClassificationCard\r\n          key={i}\r\n          data={c}\r\n          onClick={() => store.SelectClassification(i)}\r\n          isSelected={store.selectedClassificationIndex === i}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(ClassificationsSection);\r\n","import React from \"react\";\r\n\r\nconst ConditionCard = ({ data }) => {\r\n  return (\r\n    <div className=\"px-2 py-2 my-2\">\r\n      <p className=\"m-0\">{data.Name}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConditionCard;\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport ConditionCard from \"./ConditionCard\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\n\r\nconst ConditionsSection = ({ store }) => {\r\n  const [condition, setcondition] = useState(\"\");\r\n\r\n  return (\r\n    <div\r\n      className=\" col-12 col-md-6 bg-primary text-white pt-3\"\r\n      style={{ height: \"100%\", overflowY: \"auto\" }}\r\n    >\r\n      {store.clsConditions[store.selectedClassificationIndex] && (\r\n        <>\r\n          <div\r\n            className=\"row mx-auto  justify-content-center align-items-center\"\r\n            style={{ maxWidth: 280 }}\r\n          >\r\n            <TextField\r\n              label=\"New Condition\"\r\n              value={condition}\r\n              onChange={(e) => setcondition(e.target.value)}\r\n              variant=\"filled\"\r\n              InputProps={{\r\n                style: {\r\n                  color: \"white\",\r\n                },\r\n              }}\r\n              InputLabelProps={{\r\n                style: {\r\n                  color: \"white\",\r\n                },\r\n              }}\r\n              className=\" mx-auto   \"\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={async () => {\r\n                const res = await store.AddCondition(condition);\r\n                if (res) setcondition(\"\");\r\n              }}\r\n            >\r\n              Add\r\n            </Button>\r\n          </div>\r\n          {store.clsConditions[store.selectedClassificationIndex].map(\r\n            (c, i) => (\r\n              <ConditionCard key={i} data={c} />\r\n            )\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(ConditionsSection);\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Add from \"@material-ui/icons/Add\";\r\nimport { FilePond } from \"react-filepond\";\r\n// Import FilePond styles\r\nimport \"filepond/dist/filepond.min.css\";\r\n\r\nconst NewClassification = ({ store }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const onSubmit = () => {\r\n    var formData = new FormData();\r\n    formData.append(\"name\", name);\r\n    formData.append(\"image\", files[0]);\r\n    store.NewClassification(formData);\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (isSubmit) => {\r\n    setOpen(false);\r\n    if (isSubmit === true) {\r\n      onSubmit();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Fab\r\n        color=\"primary\"\r\n        aria-label=\"add\"\r\n        className=\"fab-btn\"\r\n        variant=\"extended\"\r\n        onClick={handleClickOpen}\r\n      >\r\n        <Add /> New Classification\r\n      </Fab>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        PaperProps={{\r\n          style: { width: \"100%\", maxWidth: 400 },\r\n        }}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">New Classification</DialogTitle>\r\n        <DialogContent>\r\n          <div className=\"row justify-content-between mx-0 px-2\">\r\n            <TextField\r\n              label=\"Classification Name\"\r\n              type=\"text\"\r\n              className=\"col-12  mb-3\"\r\n              color=\"primary\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </div>\r\n          <FilePond\r\n            name=\"image\"\r\n            files={files}\r\n            allowMultiple={true}\r\n            maxFiles={1}\r\n            labelIdle=\"'Drag & Drop An SVG Image or <span class='filepond--label-action'> Browse </span> \"\r\n            onprocessfilestart={() => {}}\r\n            server={{\r\n              // Disable possibility to upload file\r\n              process: null,\r\n            }}\r\n            instantUpload={false}\r\n            onupdatefiles={(fileItems) => {\r\n              // Set currently active file objects to this.state\r\n              setFiles(fileItems.map((fileItem) => fileItem.file));\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={() => handleClose(true)} color=\"primary\">\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewClassification;\r\n","import React, { useContext, useState } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Box, Paper } from \"@material-ui/core\";\r\nimport { mainContext } from \"../../stores/Context\";\r\nimport ClassificationsSection from \"./partials/ClassificationsSection\";\r\nimport ConditionsSection from \"./partials/ConditionsSection\";\r\nimport NewClassification from \"./partials/NewClassification\";\r\n\r\nconst ClassificationsAndConditions = () => {\r\n  const { ManageClassificationsStore } = useContext(mainContext);\r\n  const [store] = useState(ManageClassificationsStore);\r\n\r\n  return (\r\n    <Container className=\"py-5\">\r\n      <Paper style={{ height: \"80vh\" }}>\r\n        <div className=\"row\" style={{ position: \"relative\", height: \"100%\" }}>\r\n          <ClassificationsSection store={store} />\r\n          <NewClassification store={store} />\r\n          <ConditionsSection store={store} />\r\n        </div>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ClassificationsAndConditions;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport { observer } from \"mobx-react\";\r\nimport Home from \"../Views/Dashboard\";\r\nimport ManageUsers from \"../Views/ManageUsers\";\r\nimport ManageMedicins from \"../Views/ManageMedicins\";\r\nimport Statistics from \"../Views/Statistics\";\r\nimport ClassificationsAndConditions from \"../Views/ClassificationsAndConditions\";\r\n\r\nconst AppRouter = ({ store }) => {\r\n  // const { username, role } = store;\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/manage-users\" component={ManageUsers} />\r\n      <Route path=\"/manage-medicins\" component={ManageMedicins} />\r\n      <Route\r\n        path=\"/classifications-conditions\"\r\n        component={ClassificationsAndConditions}\r\n      />\r\n      <Route path=\"/statistics\" component={Statistics} />\r\n\r\n      <Route path=\"/\" component={Home} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default observer(AppRouter);\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport SideNav, { NavItem, NavIcon, NavText } from \"@trendmicro/react-sidenav\";\r\nimport People from \"@material-ui/icons/People\";\r\nimport BarChart from \"@material-ui/icons/BarChart\";\r\nimport Home from \"@material-ui/icons/Home\";\r\nimport ArrowBack from \"@material-ui/icons/ExitToApp\";\r\nimport LocalHospital from \"@material-ui/icons/LocalHospital\";\r\nimport CategoryIcon from \"@material-ui/icons/Category\";\r\n\r\nimport { withRouter, useHistory } from \"react-router-dom\";\r\nimport { mainContext } from \"../../stores/Context\";\r\n\r\n// Be sure to include styles at some point, probably during your bootstraping\r\n\r\nconst SideBar = () => {\r\n  const { AppState } = useContext(mainContext);\r\n  const [store] = useState(AppState);\r\n  const [toggled, setToggled] = useState(true);\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    store.ChangeWidth(toggled);\r\n  }, [store, toggled]);\r\n\r\n  return (\r\n    <SideNav\r\n      onSelect={(selected) => {\r\n        // Add your code here\r\n      }}\r\n      className=\"bg-primary\"\r\n      onToggle={(toggled) => {\r\n        setToggled(toggled);\r\n      }}\r\n      expanded={toggled}\r\n      style={{ position: \"fixed\" }}\r\n    >\r\n      <SideNav.Toggle />\r\n      <SideNav.Nav\r\n        defaultSelected={window.location.pathname.slice(1)}\r\n        onSelect={(selected) => {\r\n          const to = \"/\" + selected;\r\n          if (window.location.pathname !== to) {\r\n            history.push(to);\r\n          }\r\n        }}\r\n      >\r\n        <NavItem eventKey=\"home\">\r\n          <NavIcon>\r\n            <Home style={{ fontSize: \"1.75em\" }} />\r\n          </NavIcon>\r\n          <NavText>Dashboard</NavText>\r\n        </NavItem>\r\n        <NavItem eventKey=\"manage-users\">\r\n          <NavIcon>\r\n            <People style={{ fontSize: \"1.75em\" }} />\r\n          </NavIcon>\r\n          <NavText>Manage Users</NavText>\r\n        </NavItem>\r\n        <NavItem eventKey=\"classifications-conditions\">\r\n          <NavIcon>\r\n            <CategoryIcon style={{ fontSize: \"1.75em\" }} />\r\n          </NavIcon>\r\n          <NavText>Manage Classifications</NavText>\r\n        </NavItem>\r\n        <NavItem eventKey=\"manage-medicins\">\r\n          <NavIcon>\r\n            <LocalHospital style={{ fontSize: \"1.75em\" }} />\r\n          </NavIcon>\r\n          <NavText>Manage Medicins</NavText>\r\n        </NavItem>\r\n        <NavItem eventKey=\"statistics\">\r\n          <NavIcon>\r\n            <BarChart style={{ fontSize: \"1.75em\" }} />\r\n          </NavIcon>\r\n          <NavText>Statistics & Reports</NavText>\r\n        </NavItem>\r\n        <NavItem\r\n          onClick={() => {\r\n            store.Logout();\r\n          }}\r\n        >\r\n          <NavIcon>\r\n            <ArrowBack style={{ fontSize: \"1.75em\" }} />\r\n          </NavIcon>\r\n          <NavText>Logout</NavText>\r\n        </NavItem>\r\n      </SideNav.Nav>\r\n    </SideNav>\r\n  );\r\n};\r\n\r\nexport default withRouter(SideBar);\r\n","import React from \"react\";\nimport Header from \"./Views/Shared/Header\";\nimport Footer from \"./Views/Shared/Footer\";\nimport { NotificationContainer } from \"react-notifications\";\nimport AppRouter from \"./helpers/AppRouter\";\nimport SideBar from \"./Views/Shared/SideBar\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NotificationContainer />\n      <Header />\n      <SideBar />\n      <div\n        id=\"app-container\"\n        style={{\n          marginLeft: \"auto\",\n          width: \"100%\"\n        }}\n      >\n        <AppRouter />\n      </div>\n      <Footer />\n      {/* <Overlay /> */}\n    </div>\n  );\n}\n\nexport default App;\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faSmile, faAddressBook } from \"@fortawesome/free-solid-svg-icons\";\r\nlibrary.add(faSmile, faAddressBook);\r\n","import AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\nAOS.init({\r\n  offset: 100,\r\n  duration: 700,\r\n  easing: \"ease-in-sine\",\r\n  delay: 100\r\n});\r\n","import \"./iconsLibrary\";\r\nimport \"@trendmicro/react-sidenav/dist/react-sidenav.css\";\r\nimport \"./aos\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// Add a response interceptor\r\naxios.interceptors.response.use(\r\n  function(response) {\r\n    return response;\r\n  },\r\n  async function(error) {\r\n    //This is to request a new access token if the error was because its expiration\r\n    if (error.response.data === \"Token Expired\") {\r\n      try {\r\n        const refTokenRes = await axios.post(\"/api/users/refresh-token\", {\r\n          username: localStorage.getItem(\"username\"),\r\n          refreshToken: localStorage.getItem(\"refreshToken\")\r\n        });\r\n\r\n        localStorage.setItem(\r\n          \"refreshToken\",\r\n          refTokenRes.data.data.refreshToken\r\n        );\r\n\r\n        const res = await axios(error.config); //then we re-call the same method that got rejected\r\n        return Promise.resolve(res);\r\n      } catch (error) {\r\n        //Refresh Token Invalid so we ask the user to login again\r\n        localStorage.clear();\r\n        window.location = \"/login\";\r\n      }\r\n    }\r\n    // axios(error.config)\r\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n    // Do something with response error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst primaryColor = \"#007ebe\";\r\n\r\nexport const theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      \"Titillium Web\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"'\r\n    ].join(\",\")\r\n  },\r\n  palette: {\r\n    primary: {\r\n      // light: will be calculated from palette.primary.main,\r\n      main: primaryColor\r\n      // dark: will be calculated from palette.primary.main,\r\n      // contrastText: will be calculated to contrast with palette.primary.main\r\n    },\r\n    secondary: {\r\n      main: \"#8bb6cb\"\r\n      // dark: will be calculated from palette.secondary.main,\r\n    }\r\n    // error: will use the default color\r\n  },\r\n  overrides: {\r\n    MuiOutlinedInput: {\r\n      notchedOutline: {\r\n        borderColor: primaryColor,\r\n        borderWidth: 1\r\n      }\r\n    },\r\n    MuiInputLabel: {\r\n      root: {\r\n        // color: \"red\"\r\n        color: primaryColor\r\n      }\r\n    }\r\n  }\r\n});\r\n","import { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ScrollToTop extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React from \"react\";\r\nimport \"./theme.scss\";\r\nimport \"./App.scss\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { theme } from \"./materialTheme\";\r\nimport ScrollToTop from \"./ScrollToTopController\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport { ContextProvider } from \"../stores/Context\";\r\n\r\nconst AppWrapper = props => {\r\n  return (\r\n    <BrowserRouter>\r\n      <ContextProvider>\r\n        <ThemeProvider theme={theme}>\r\n          <ScrollToTop>{props.children}</ScrollToTop>\r\n        </ThemeProvider>\r\n      </ContextProvider>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default AppWrapper;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./helpers/vendors\";\nimport AppWrapper from \"./helpers/AppWrapper\";\n\nReactDOM.render(\n  <AppWrapper>\n    <App />\n  </AppWrapper>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}