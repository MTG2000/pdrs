{"version":3,"sources":["Views/Shared/Header.jsx","Views/Shared/Footer.jsx","Views/Dashboard/Partials/NewMessageCard.jsx","Views/Dashboard/Partials/NewMessagesList.jsx","stores/AppState.js","stores/DashboardStore.js","stores/ManageUsersStore.js","stores/ManageMedicinsStore.js","stores/Context.js","Views/Dashboard/Partials/AccountRequestCard.jsx","Views/Dashboard/Partials/NewAccountRequests.jsx","Views/Dashboard/index.jsx","Views/Shared/ActionBtn.jsx","Views/Shared/LoadingMini.jsx","Views/ManageUsers/Partials/UserCard.jsx","Views/ManageUsers/Partials/UsersList.jsx","Views/ManageUsers/Partials/SearchInput.jsx","Views/ManageUsers/Partials/NewUser.jsx","Views/ManageUsers/index.jsx","Views/ManageMedicins/Partials/MedicinsList.jsx","Views/ManageMedicins/Partials/SearchInput.jsx","Views/ManageMedicins/Partials/NewMedicine.jsx","Views/ManageMedicins/index.js","Views/Statistics/index.jsx","helpers/AppRouter.jsx","Views/Shared/SideBar.jsx","App.js","helpers/iconsLibrary.js","helpers/aos.js","helpers/materialTheme.js","helpers/ScrollToTopController.js","helpers/AppWrapper.js","index.js"],"names":["observer","store","Footer","useStyle","makeStyles","card","backgroundColor","boxShadow","maxWidth","removeIcon","color","cursor","NewMessageCard","msg","message","onRead","classes","className","Chip","size","style","background","Category","console","log","toLowerCase","indexOf","label","Content","DoctorName","PharmacyName","onClick","useEffect","FetchNewMessages","loadingNewMessages","newMessages","length","map","m","key","Id","MarkMessageRead","AppState","username","role","this","localStorage","getItem","toggled","sidebarWidth","appContainer","document","getElementById","pageWidth","Math","max","body","scrollWidth","documentElement","offsetWidth","clientWidth","width","removeItem","window","location","decorate","observable","Logout","action","ChangeWidth","DashboardStore","newAccountRequests","loadingNewAccountRequests","loadingDashboard","fetch","res","ok","Error","json","data","runInAction","id","method","headers","Accept","JSON","stringify","FetchNewAccountRequests","ManageUsersStore","allUsers","users","value","filter","u","Username","contact","password","type","doctorName","pharmacyName","pharmacyAddress","address","NotificationManager","success","FetchAllUsers","error","loadingToggleActive","IsActive","SearchUsers","RegisterUser","ManageMedicinsStore","allMedicins","medicins","v","Name","name","FetchMedicins","mainContext","React","createContext","ContextProvider","props","Provider","children","AccountRequestCard","requset","Type","Phone","Email","r","MarkAccountRequestRead","Dashboard","useContext","useState","Container","ActionBtn","elem","useRef","toggleShowLoading","loading","show","current","disabled","querySelector","display","ElementWithClassName","cloneElement","ref","LoadingMini","theme","useTheme","palette","primary","main","borderRadius","activeIcon","deactiveIcon","UserCard","user","onToggleActive","ToggleActive","SearchInput","search","setSearch","TextField","onChange","e","target","variant","NewUser","open","setOpen","userType","setUserType","setUsername","setContact","setDoctorName","setPharmacyName","setPharmacyAddress","setPassword","handleClose","isSubmit","Fab","aria-label","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","required","placeholder","InputProps","readOnly","Button","PasswordGenerator","generate","uppercase","FormControl","component","FormLabel","RadioGroup","defaultChecked","FormControlLabel","control","Radio","DialogActions","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","i","scope","SearchMedicins","NewMedicine","setName","ManageMedicins","Statistics","Typography","align","path","ManageUsers","Home","withRouter","setToggled","history","useHistory","onSelect","selected","onToggle","expanded","position","Toggle","Nav","defaultSelected","pathname","slice","to","push","eventKey","fontSize","App","marginLeft","library","add","faSmile","faAddressBook","AOS","init","offset","duration","easing","delay","createMuiTheme","typography","fontFamily","join","secondary","overrides","MuiOutlinedInput","notchedOutline","borderColor","borderWidth","MuiInputLabel","root","ScrollToTop","prevProps","scrollTo","Component","AppWrapper","ThemeProvider","ReactDOM","render"],"mappings":"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","file":"static/js/main.3abac2b4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst Header = ({ store }) => {\r\n  return <header></header>;\r\n};\r\n\r\nexport default observer(Header);\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return <footer />;\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { makeStyles, Chip } from \"@material-ui/core\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport { toJS } from \"mobx\";\r\n\r\nconst useStyle = makeStyles({\r\n  card: {\r\n    backgroundColor: \"#FFF\",\r\n    boxShadow: \"3px 5px 10px #9b9b9b\",\r\n    maxWidth: 700\r\n  },\r\n  removeIcon: {\r\n    color: \"red\",\r\n    cursor: \"pointer\"\r\n  }\r\n});\r\n\r\nconst selectColor = msg => {\r\n  console.log(msg);\r\n  if (msg.toLowerCase().indexOf(\"problem\") !== -1) return \"#f44336\";\r\n  if (msg.toLowerCase().indexOf(\"add\") !== -1) return \"#3d5afe\";\r\n  if (msg.toLowerCase().indexOf(\"feature\") !== -1) return \"#43a047\";\r\n  return \"#546e7a\";\r\n};\r\n\r\nconst NewMessageCard = ({ message, onRead }) => {\r\n  const classes = useStyle();\r\n  return (\r\n    <div className=\"col-12\">\r\n      <div\r\n        className={`${classes.card}  px-3 mb-4 py-3 row mx-0 justify-content-between`}\r\n      >\r\n        <div className=\"col-10\">\r\n          <div className=\"mb-2\">\r\n            <Chip\r\n              size=\"small\"\r\n              style={{\r\n                background: selectColor(message.Category),\r\n                color: \"#FFF\"\r\n              }}\r\n              label={message.Category}\r\n            />\r\n          </div>\r\n          <h5>{message.Content}</h5>\r\n          <span className=\"text-dark \">\r\n            {message.DoctorName && `Doctor ${message.DoctorName}`}\r\n            {message.PharmacyName && `Pharmacy ${message.PharmacyName}`}\r\n          </span>\r\n        </div>\r\n        <Clear\r\n          className={`${classes.removeIcon} align-self-center`}\r\n          onClick={onRead}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewMessageCard;\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport NewMessageCard from \"./NewMessageCard\";\r\nimport Email from \"@material-ui/icons/Email\";\r\n\r\nconst NewMessagesList = ({ store }) => {\r\n  useEffect(() => {\r\n    store.FetchNewMessages();\r\n  }, [store]);\r\n\r\n  if (store.loadingNewMessages)\r\n    return <h2 className=\"text-center py-5\">Loading...</h2>;\r\n\r\n  if (store.newMessages.length === 0)\r\n    return <h2 className=\"text-center py-5\">No New Messages...</h2>;\r\n\r\n  return (\r\n    <div className=\"row py-5 mx-0\">\r\n      <h5>\r\n        <Email /> You Have Some New Messages\r\n      </h5>\r\n      {store.newMessages.map(m => (\r\n        <NewMessageCard\r\n          key={m.Id}\r\n          message={m}\r\n          onRead={() => store.MarkMessageRead(m.Id)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(NewMessagesList);\r\n","import { observable, action, decorate } from \"mobx\";\r\n\r\nclass AppState {\r\n  //Global\r\n  username = \"\";\r\n  role = \"\";\r\n\r\n  constructor() {\r\n    this.username = localStorage.getItem(\"username\");\r\n    this.role = localStorage.getItem(\"user-role\");\r\n  }\r\n\r\n  ChangeWidth(toggled) {\r\n    const sidebarWidth = toggled ? 240 : 64;\r\n    const appContainer = document.getElementById(\"app-container\");\r\n    const pageWidth = Math.max(\r\n      document.body.scrollWidth,\r\n      document.documentElement.scrollWidth,\r\n      document.body.offsetWidth,\r\n      document.documentElement.offsetWidth,\r\n      document.documentElement.clientWidth\r\n    );\r\n    appContainer.style.width = `${pageWidth - sidebarWidth}px`;\r\n  }\r\n\r\n  Logout() {\r\n    localStorage.removeItem(\"username\");\r\n    localStorage.removeItem(\"user-role\");\r\n    window.location = \"/\";\r\n  }\r\n}\r\n\r\ndecorate(AppState, {\r\n  username: observable,\r\n  role: observable,\r\n  Logout: action,\r\n  ChangeWidth: action\r\n});\r\n\r\nexport default new AppState();\r\n// const todoStoreInstance = new NewPrescription();\r\n// export default todoStoreInstance;\r\n","import { observable, action, decorate, runInAction } from \"mobx\";\r\n\r\nclass DashboardStore {\r\n  //Dashboard\r\n  newMessages = [];\r\n  loadingNewMessages = true;\r\n  newAccountRequests = [];\r\n  loadingNewAccountRequests = true;\r\n  loadingDashboard = true;\r\n\r\n  async FetchNewMessages() {\r\n    try {\r\n      this.loadingNewMessages = true;\r\n      const res = await fetch(\"/api/admin/new-messages\");\r\n      if (!res.ok) throw Error();\r\n      const { data } = await res.json();\r\n      runInAction(() => {\r\n        this.newMessages = data;\r\n        this.loadingNewMessages = false;\r\n      });\r\n    } catch (error) {\r\n      this.loadingNewMessages = false;\r\n    }\r\n  }\r\n\r\n  async MarkMessageRead(id) {\r\n    try {\r\n      const res = await fetch(\"/api/admin/read-message\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ id })\r\n      });\r\n      await res.json();\r\n      this.FetchNewMessages();\r\n    } catch (error) {}\r\n  }\r\n\r\n  async FetchNewAccountRequests() {\r\n    try {\r\n      this.loadingNewAccountRequests = true;\r\n      const res = await fetch(\"/api/admin/new-account-requests\");\r\n      if (!res.ok) throw Error();\r\n      const { data } = await res.json();\r\n      runInAction(() => {\r\n        this.newAccountRequests = data;\r\n        this.loadingNewAccountRequests = false;\r\n      });\r\n    } catch (error) {\r\n      this.loadingNewAccountRequests = false;\r\n    }\r\n  }\r\n\r\n  async MarkAccountRequestRead(id) {\r\n    try {\r\n      const res = await fetch(\"/api/admin/read-account-request\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ id })\r\n      });\r\n      await res.json();\r\n      this.FetchNewAccountRequests();\r\n    } catch (error) {}\r\n  }\r\n}\r\n\r\ndecorate(DashboardStore, {\r\n  newMessages: observable,\r\n  loadingNewMessages: observable,\r\n  newAccountRequests: observable,\r\n  loadingNewAccountRequests: observable,\r\n  FetchNewAccountRequests: action\r\n});\r\n\r\nexport default new DashboardStore();\r\n// const todoStoreInstance = new NewPrescription();\r\n// export default todoStoreInstance;\r\n","import { observable, action, decorate, runInAction } from \"mobx\";\r\nimport { NotificationManager } from \"react-notifications\";\r\n\r\nclass ManageUsersStore {\r\n  allUsers = [];\r\n  users = [];\r\n\r\n  async FetchAllUsers() {\r\n    try {\r\n      const res = await fetch(\"/api/users\");\r\n      if (!res.ok) throw Error(\"Forbidden\");\r\n      const { data } = await res.json();\r\n      runInAction(() => {\r\n        console.log(data);\r\n        this.allUsers = data;\r\n        this.users = this.allUsers;\r\n      });\r\n    } catch (error) {}\r\n  }\r\n\r\n  SearchUsers(value) {\r\n    this.users = this.allUsers.filter(u => {\r\n      if (u.Username.toLowerCase().indexOf(value.toLowerCase()) !== -1)\r\n        return true;\r\n      if (u.DoctorName) {\r\n        return u.DoctorName.toLowerCase().indexOf(value.toLowerCase()) !== -1;\r\n      }\r\n      if (u.PharmacyName) {\r\n        return u.PharmacyName.toLowerCase().indexOf(value.toLowerCase()) !== -1;\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n\r\n  async RegisterUser(\r\n    username,\r\n    contact,\r\n    password,\r\n    type,\r\n    doctorName,\r\n    pharmacyName,\r\n    pharmacyAddress\r\n  ) {\r\n    try {\r\n      const res = await fetch(\"/api/users/register\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          username,\r\n          contact,\r\n          password,\r\n          type,\r\n          doctorName,\r\n          pharmacyName,\r\n          address: pharmacyAddress\r\n        })\r\n      });\r\n\r\n      if (!res.ok) throw Error();\r\n      await res.json();\r\n      NotificationManager.success(\"User Registered Successfully\");\r\n      this.FetchAllUsers();\r\n      runInAction(() => {});\r\n    } catch (error) {\r\n      NotificationManager.error(\"User Registereation Failed\");\r\n    }\r\n  }\r\n\r\n  async ToggleActive(id) {\r\n    try {\r\n      this.users = this.users.map(u => {\r\n        if (u.Id === id) u.loadingToggleActive = true;\r\n        return u;\r\n      });\r\n      this.loadingToggleActive = true;\r\n      const res = await fetch(\"/api/users/toggle-active-state\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ id })\r\n      });\r\n      await res.json();\r\n      runInAction(() => {\r\n        this.users = this.users.map(u => {\r\n          if (u.Id === id) u.loadingToggleActive = false;\r\n          return u;\r\n        });\r\n        this.users = this.users.map(u => {\r\n          if (u.Id === id) u.IsActive = !u.IsActive;\r\n          return u;\r\n        });\r\n      });\r\n    } catch (error) {}\r\n  }\r\n}\r\n\r\ndecorate(ManageUsersStore, {\r\n  users: observable,\r\n  allUsers: observable,\r\n  FetchAllUsers: action,\r\n  SearchUsers: action,\r\n  RegisterUser: action\r\n});\r\n\r\nexport default new ManageUsersStore();\r\n// const todoStoreInstance = new NewPrescription();\r\n// export default todoStoreInstance;\r\n","import { observable, action, decorate, runInAction } from \"mobx\";\r\nimport { NotificationManager } from \"react-notifications\";\r\n\r\nclass ManageMedicinsStore {\r\n  allMedicins = [];\r\n  medicins = [];\r\n\r\n  async FetchMedicins() {\r\n    try {\r\n      const res = await fetch(\"/api/medicins\");\r\n      if (!res.ok) throw Error(\"Forbidden\");\r\n      const { data } = await res.json();\r\n      runInAction(() => {\r\n        this.allMedicins = data;\r\n        this.medicins = data;\r\n      });\r\n    } catch (error) {}\r\n  }\r\n\r\n  SearchMedicins(v) {\r\n    this.medicins = this.allMedicins.filter(\r\n      m => m.Name.toLowerCase().indexOf(v.toLowerCase()) !== -1\r\n    );\r\n  }\r\n\r\n  async NewMedicine(name) {\r\n    try {\r\n      const res = await fetch(\"/api/medicins/new\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          name\r\n        })\r\n      });\r\n\r\n      if (!res.ok) throw Error();\r\n      await res.json();\r\n      NotificationManager.success(\"Medicine Added Successfully\");\r\n      this.FetchMedicins();\r\n    } catch (error) {\r\n      NotificationManager.error(\"Couldn't Add Medicine\");\r\n    }\r\n  }\r\n}\r\n\r\ndecorate(ManageMedicinsStore, {\r\n  medicins: observable,\r\n  FetchMedicins: action\r\n});\r\n\r\nexport default new ManageMedicinsStore();\r\n// const todoStoreInstance = new NewPrescription();\r\n// export default todoStoreInstance;\r\n","import React from \"react\";\r\nimport AppState from \"./AppState\";\r\nimport DashboardStore from \"./DashboardStore\";\r\nimport ManageUsersStore from \"./ManageUsersStore\";\r\nimport ManageMedicinsStore from \"./ManageMedicinsStore\";\r\n\r\nexport const mainContext = React.createContext();\r\n\r\nexport const ContextProvider = props => {\r\n  return (\r\n    <mainContext.Provider\r\n      value={{\r\n        AppState,\r\n        DashboardStore,\r\n        ManageUsersStore,\r\n        ManageMedicinsStore\r\n      }}\r\n    >\r\n      {props.children}\r\n    </mainContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\n\r\nconst useStyle = makeStyles({\r\n  card: {\r\n    backgroundColor: \"#FFF\",\r\n    boxShadow: \"3px 5px 10px #9b9b9b\",\r\n    maxWidth: 700\r\n  },\r\n  removeIcon: {\r\n    color: \"red\",\r\n    cursor: \"pointer\"\r\n  }\r\n});\r\n\r\nconst AccountRequestCard = ({ requset, onRead }) => {\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <div className=\"col-12\">\r\n      <div\r\n        className={`${classes.card}  px-3 mb-4 py-3 row mx-0 justify-content-between`}\r\n      >\r\n        <div>\r\n          <div>\r\n            <span className=\"text-info \">{requset.Type}</span>\r\n            <br />\r\n            <span className=\"text-dark \">{requset.Name}</span>\r\n          </div>\r\n          <h5>{requset.Phone}</h5>\r\n          <h5>{requset.Email}</h5>\r\n        </div>\r\n        <Clear\r\n          className={`${classes.removeIcon} align-self-center`}\r\n          onClick={onRead}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountRequestCard;\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport AccountRequestCard from \"./AccountRequestCard\";\r\nimport PersonAdd from \"@material-ui/icons/PersonAdd\";\r\n\r\nconst NewAccountRequests = ({ store }) => {\r\n  useEffect(() => {\r\n    store.FetchNewAccountRequests();\r\n  }, [store]);\r\n\r\n  if (store.loadingNewAccountRequests)\r\n    return <h2 className=\"text-center py-5\">Loading Account Requests...</h2>;\r\n\r\n  if (store.newAccountRequests.length === 0)\r\n    return <h2 className=\"text-center py-5\">No New Requests...</h2>;\r\n\r\n  return (\r\n    <div className=\"row py-5 mx-0\">\r\n      <h5>\r\n        {\" \"}\r\n        <PersonAdd /> You have New Account Requests\r\n      </h5>\r\n      {store.newAccountRequests.map(r => (\r\n        <AccountRequestCard\r\n          key={r.Id}\r\n          requset={r}\r\n          onRead={() => store.MarkAccountRequestRead(r.Id)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(NewAccountRequests);\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport NewMessagesList from \"./Partials/NewMessagesList\";\r\nimport { mainContext } from \"../../stores/Context\";\r\nimport NewAccountRequests from \"./Partials/NewAccountRequests\";\r\n\r\nconst Dashboard = () => {\r\n  const { DashboardStore } = useContext(mainContext);\r\n  const [store] = useState(DashboardStore);\r\n\r\n  return (\r\n    <Container className=\"py-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-lg-6\">\r\n          <NewMessagesList store={store} />\r\n        </div>\r\n        <div className=\"col-12 col-lg-6\">\r\n          <NewAccountRequests store={store} />\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect, useRef } from \"react\";\r\n\r\nconst ActionBtn = props => {\r\n  const elem = useRef(null);\r\n\r\n  useEffect(() => {\r\n    toggleShowLoading(props.loading);\r\n  }, [props.loading]);\r\n\r\n  const toggleShowLoading = (show = false) => {\r\n    if (!elem.current) return;\r\n    if (show) {\r\n      elem.current.disabled = true;\r\n      elem.current.querySelector(\".loading\").style.display = \"block\";\r\n      elem.current.querySelector(\".content\").style.display = \"none\";\r\n    } else {\r\n      elem.current.disabled = false;\r\n      elem.current.querySelector(\".loading\").style.display = \"none\";\r\n      elem.current.querySelector(\".content\").style.display = \"block\";\r\n    }\r\n  };\r\n\r\n  let ElementWithClassName = React.cloneElement(props.children, {\r\n    ref: elem\r\n  });\r\n\r\n  return <>{ElementWithClassName}</>;\r\n};\r\n\r\nexport default ActionBtn;\r\n","import React from \"react\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\nimport { useTheme } from \"@material-ui/core\";\r\n\r\nconst LoadingMini = props => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <div className=\"align-self-center\">\r\n      <PulseLoader\r\n        //  css={override}\r\n        {...props}\r\n        size={5}\r\n        color={theme.palette.primary.main}\r\n        loading={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingMini;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ActionBtn from \"../../Shared/ActionBtn\";\r\nimport LoadingMini from \"../../Shared/LoadingMini\";\r\n\r\nconst useStyle = makeStyles({\r\n  card: {\r\n    backgroundColor: \"#FFF\",\r\n    boxShadow: \"3px 5px 10px #939393\",\r\n    borderRadius: 5\r\n  },\r\n  activeIcon: {\r\n    color: \"green\",\r\n    cursor: \"pointer\"\r\n  },\r\n  deactiveIcon: {\r\n    color: \"red\",\r\n    cursor: \"pointer\"\r\n  }\r\n});\r\n\r\nconst UserCard = ({ user, onToggleActive }) => {\r\n  const classes = useStyle();\r\n  return (\r\n    <div\r\n      className={`${classes.card} col-12 mb-2 py-3 row mx-0 justify-content-between`}\r\n    >\r\n      <div>\r\n        <div>\r\n          <span className=\"text-info \">{user.Username}</span>\r\n          <span className=\"text-dark mx-4\">\r\n            {user.DoctorName && `Doctor ${user.DoctorName}`}\r\n            {user.PharmacyName && `Pharmacy ${user.PharmacyName}`}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <ActionBtn loading={user.loadingToggleActive}>\r\n        <button className=\"btn-none\">\r\n          <span className=\"content\">\r\n            {user.IsActive ? (\r\n              <Check\r\n                className={`${classes.activeIcon} align-self-center`}\r\n                onClick={onToggleActive}\r\n              />\r\n            ) : (\r\n              <Clear\r\n                className={`${classes.deactiveIcon} align-self-center`}\r\n                onClick={onToggleActive}\r\n              />\r\n            )}\r\n          </span>\r\n          <div className=\"loading\">\r\n            <LoadingMini color={\"#FFF\"} />\r\n          </div>\r\n        </button>\r\n      </ActionBtn>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport UserCard from \"./UserCard\";\r\n\r\nconst UsersList = ({ store }) => {\r\n  useEffect(() => {\r\n    store.FetchAllUsers();\r\n  }, [store]);\r\n\r\n  return (\r\n    <div style={{ maxWidth: 600 }} className=\"mx-auto py-5\">\r\n      {store.users.map(u => (\r\n        <UserCard\r\n          key={u.Id}\r\n          user={u}\r\n          onToggleActive={() => store.ToggleActive(u.Id)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(UsersList);\r\n","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\n\r\nconst SearchInput = ({ store }) => {\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  return (\r\n    <div\r\n      className=\"row mx-auto justify-content-center\"\r\n      style={{ maxWidth: 280 }}\r\n    >\r\n      <TextField\r\n        id=\"search-users\"\r\n        label=\"Search Users\"\r\n        value={search}\r\n        onChange={e => {\r\n          setSearch(e.target.value);\r\n          store.SearchUsers(e.target.value);\r\n        }}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        className=\" mx-auto mb-3 col-12 \"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport {\r\n  Fab,\r\n  FormControl,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup\r\n} from \"@material-ui/core\";\r\nimport PersonAdd from \"@material-ui/icons/PersonAdd\";\r\nimport PasswordGenerator from \"generate-password\";\r\n\r\nconst NewUser = ({ store }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [userType, setUserType] = React.useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [contact, setContact] = useState(\"\");\r\n  const [doctorName, setDoctorName] = useState(\"\");\r\n  const [pharmacyName, setPharmacyName] = useState(\"\");\r\n  const [pharmacyAddress, setPharmacyAddress] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = isSubmit => {\r\n    setOpen(false);\r\n    if (isSubmit) {\r\n      console.log(\"ssss\");\r\n      store.RegisterUser(\r\n        username,\r\n        contact,\r\n        password,\r\n        userType,\r\n        doctorName,\r\n        pharmacyName,\r\n        pharmacyAddress\r\n      );\r\n    }\r\n  };\r\n\r\n  const generatePassword = () => {\r\n    setPassword(\r\n      PasswordGenerator.generate({\r\n        length: 8,\r\n        uppercase: false\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Fab\r\n        color=\"primary\"\r\n        aria-label=\"add\"\r\n        className=\"fab-btn\"\r\n        onClick={handleClickOpen}\r\n      >\r\n        <PersonAdd />\r\n      </Fab>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Register New User</DialogTitle>\r\n        <DialogContent>\r\n          <div className=\"row justify-content-between mx-0 px-2\">\r\n            <TextField\r\n              label=\"Username\"\r\n              type=\"text\"\r\n              className=\"col-12 col-md-5 mb-3\"\r\n              color=\"primary\"\r\n              required\r\n              value={username}\r\n              onChange={e => setUsername(e.target.value)}\r\n            />\r\n            <TextField\r\n              label=\"Contact Info\"\r\n              placeholder=\"0968443292\"\r\n              type=\"text\"\r\n              className=\"col-12 col-md-5 mb-3\"\r\n              value={contact}\r\n              onChange={e => setContact(e.target.value)}\r\n            />\r\n            <div className=\"col-12 mb-3 px-0 row mx-0 \">\r\n              <TextField\r\n                label=\"Password\"\r\n                type=\"text\"\r\n                className=\"col-12 col-md-8\"\r\n                value={password}\r\n                InputProps={{\r\n                  readOnly: true\r\n                }}\r\n                color=\"primary\"\r\n                required\r\n              />\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\"mx-3  align-self-center\"\r\n                onClick={generatePassword}\r\n              >\r\n                Generate\r\n              </Button>\r\n            </div>\r\n            <FormControl component=\"fieldset\" className=\"my-3 col-12\">\r\n              <FormLabel component=\"legend\">User Type</FormLabel>\r\n              <RadioGroup\r\n                aria-label=\"gender\"\r\n                name=\"gender1\"\r\n                value={userType}\r\n                onChange={e => setUserType(e.target.value)}\r\n                className=\"row mx-0 flex-row\"\r\n                defaultChecked\r\n              >\r\n                <FormControlLabel\r\n                  value=\"Admin\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Admin\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"Doctor\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Doctor\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"Pharmacy\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Pharmacy\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n            {userType === \"Doctor\" && (\r\n              <TextField\r\n                label=\"Doctor Name\"\r\n                type=\"text\"\r\n                className=\"col-12 mb-3\"\r\n                value={doctorName}\r\n                onChange={e => setDoctorName(e.target.value)}\r\n              />\r\n            )}\r\n            {userType === \"Pharmacy\" && (\r\n              <>\r\n                <TextField\r\n                  label=\"Pharmacy Name\"\r\n                  type=\"text\"\r\n                  className=\"col-12 mb-3\"\r\n                  value={pharmacyName}\r\n                  onChange={e => setPharmacyName(e.target.value)}\r\n                />\r\n                <TextField\r\n                  label=\"Pharmacy Address\"\r\n                  type=\"text\"\r\n                  className=\"col-12 mb-3\"\r\n                  value={pharmacyAddress}\r\n                  onChange={e => setPharmacyAddress(e.target.value)}\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => handleClose(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={() => handleClose(true)} color=\"primary\">\r\n            Register\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewUser;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { mainContext } from \"../../stores/Context\";\r\nimport { observer } from \"mobx-react\";\r\nimport UsersList from \"./Partials/UsersList\";\r\nimport SearchInput from \"./Partials/SearchInput\";\r\nimport NewUser from \"./Partials/NewUser\";\r\n\r\nconst ManageUsers = () => {\r\n  const { ManageUsersStore } = useContext(mainContext);\r\n  const [store] = useState(ManageUsersStore);\r\n\r\n  return (\r\n    <div className=\"py-5\">\r\n      <NewUser store={store} />\r\n      <SearchInput store={store} />\r\n      <UsersList store={store} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(ManageUsers);\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport {\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  TableContainer,\r\n  Paper\r\n} from \"@material-ui/core\";\r\n\r\nconst MedicinsList = ({ store }) => {\r\n  useEffect(() => {\r\n    store.FetchMedicins();\r\n  }, [store]);\r\n\r\n  return (\r\n    <TableContainer\r\n      component={Paper}\r\n      style={{ maxWidth: 500 }}\r\n      className=\"mx-auto mt-4\"\r\n    >\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Id</TableCell>\r\n            <TableCell>Medicine Name</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {store.medicins.map((m, i) => (\r\n            <TableRow key={m.Id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {i + 1}\r\n              </TableCell>\r\n              <TableCell>{m.Name}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default observer(MedicinsList);\r\n","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\n\r\nconst SearchInput = ({ store }) => {\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  return (\r\n    <div\r\n      className=\"row mx-auto justify-content-center\"\r\n      style={{ maxWidth: 280 }}\r\n    >\r\n      <TextField\r\n        id=\"search-meds\"\r\n        label=\"Search Medicins\"\r\n        value={search}\r\n        onChange={e => {\r\n          setSearch(e.target.value);\r\n          store.SearchMedicins(e.target.value);\r\n        }}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        className=\" mx-auto mb-3 col-12 \"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Add from \"@material-ui/icons/Add\";\r\n\r\nconst NewMedicine = ({ store }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = isSubmit => {\r\n    setOpen(false);\r\n    if (isSubmit === true) {\r\n      store.NewMedicine(name);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Fab\r\n        color=\"primary\"\r\n        aria-label=\"add\"\r\n        className=\"fab-btn\"\r\n        variant=\"extended\"\r\n        onClick={handleClickOpen}\r\n      >\r\n        <Add /> New Medicine\r\n      </Fab>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">New Medicine</DialogTitle>\r\n        <DialogContent>\r\n          <div className=\"row justify-content-between mx-0 px-2\">\r\n            <TextField\r\n              label=\"Medicine Name\"\r\n              type=\"text\"\r\n              className=\"col-12  mb-3\"\r\n              color=\"primary\"\r\n              value={name}\r\n              onChange={e => setName(e.target.value)}\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={() => handleClose(true)} color=\"primary\">\r\n            Register\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewMedicine;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { mainContext } from \"../../stores/Context\";\r\nimport MedicinsList from \"./Partials/MedicinsList\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport SearchInput from \"./Partials/SearchInput\";\r\nimport NewMedicine from \"./Partials/NewMedicine\";\r\n\r\nconst ManageMedicins = () => {\r\n  const { ManageMedicinsStore } = useContext(mainContext);\r\n  const [store] = useState(ManageMedicinsStore);\r\n  return (\r\n    <Container className=\"py-5\">\r\n      <SearchInput store={store} />\r\n      <MedicinsList store={store} />\r\n      <NewMedicine store={store} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ManageMedicins;\r\n","import React from \"react\";\r\nimport { Container, Typography } from \"@material-ui/core\";\r\nimport BuildIcon from \"@material-ui/icons/Build\";\r\n\r\nconst Statistics = () => {\r\n  return (\r\n    <Container className=\"py-5\">\r\n      <Typography variant=\"h5\" align=\"center\">\r\n        A Work In Progress .... <BuildIcon />\r\n      </Typography>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport { observer } from \"mobx-react\";\r\nimport Home from \"../Views/Dashboard\";\r\nimport ManageUsers from \"../Views/ManageUsers\";\r\nimport ManageMedicins from \"../Views/ManageMedicins\";\r\nimport Statistics from \"../Views/Statistics\";\r\n\r\nconst AppRouter = ({ store }) => {\r\n  // const { username, role } = store;\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/manage-users\" component={ManageUsers} />\r\n      <Route path=\"/manage-medicins\" component={ManageMedicins} />\r\n      <Route path=\"/statistics\" component={Statistics} />\r\n\r\n      <Route path=\"/\" component={Home} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default observer(AppRouter);\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport SideNav, { NavItem, NavIcon, NavText } from \"@trendmicro/react-sidenav\";\r\nimport People from \"@material-ui/icons/People\";\r\nimport BarChart from \"@material-ui/icons/BarChart\";\r\nimport Home from \"@material-ui/icons/Home\";\r\nimport ArrowBack from \"@material-ui/icons/ExitToApp\";\r\nimport LocalHospital from \"@material-ui/icons/LocalHospital\";\r\n\r\nimport { withRouter, useHistory } from \"react-router-dom\";\r\nimport { mainContext } from \"../../stores/Context\";\r\n\r\n// Be sure to include styles at some point, probably during your bootstraping\r\n\r\nconst SideBar = () => {\r\n  const { AppState } = useContext(mainContext);\r\n  const [store] = useState(AppState);\r\n  const [toggled, setToggled] = useState(true);\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    store.ChangeWidth(toggled);\r\n  }, [store, toggled]);\r\n\r\n  return (\r\n    <SideNav\r\n      onSelect={selected => {\r\n        // Add your code here\r\n      }}\r\n      className=\"bg-primary\"\r\n      onToggle={toggled => {\r\n        setToggled(toggled);\r\n      }}\r\n      expanded={toggled}\r\n      style={{ position: \"fixed\" }}\r\n    >\r\n      <SideNav.Toggle />\r\n      <SideNav.Nav\r\n        defaultSelected={window.location.pathname.slice(1)}\r\n        onSelect={selected => {\r\n          const to = \"/\" + selected;\r\n          if (window.location.pathname !== to) {\r\n            history.push(to);\r\n          }\r\n        }}\r\n      >\r\n        <NavItem eventKey=\"home\">\r\n          <NavIcon>\r\n            <Home style={{ fontSize: \"1.75em\" }} />\r\n          </NavIcon>\r\n          <NavText>Dashboard</NavText>\r\n        </NavItem>\r\n        <NavItem eventKey=\"manage-users\">\r\n          <NavIcon>\r\n            <People style={{ fontSize: \"1.75em\" }} />\r\n          </NavIcon>\r\n          <NavText>Manage Users</NavText>\r\n        </NavItem>\r\n        <NavItem eventKey=\"manage-medicins\">\r\n          <NavIcon>\r\n            <LocalHospital style={{ fontSize: \"1.75em\" }} />\r\n          </NavIcon>\r\n          <NavText>Manage Medicins</NavText>\r\n        </NavItem>\r\n        <NavItem eventKey=\"statistics\">\r\n          <NavIcon>\r\n            <BarChart style={{ fontSize: \"1.75em\" }} />\r\n          </NavIcon>\r\n          <NavText>Statistics & Reports</NavText>\r\n        </NavItem>\r\n        <NavItem\r\n          onClick={() => {\r\n            store.Logout();\r\n          }}\r\n        >\r\n          <NavIcon>\r\n            <ArrowBack style={{ fontSize: \"1.75em\" }} />\r\n          </NavIcon>\r\n          <NavText>Logout</NavText>\r\n        </NavItem>\r\n      </SideNav.Nav>\r\n    </SideNav>\r\n  );\r\n};\r\n\r\nexport default withRouter(SideBar);\r\n","import React from \"react\";\nimport Header from \"./Views/Shared/Header\";\nimport Footer from \"./Views/Shared/Footer\";\nimport { NotificationContainer } from \"react-notifications\";\nimport AppRouter from \"./helpers/AppRouter\";\nimport SideBar from \"./Views/Shared/SideBar\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NotificationContainer />\n      <Header />\n      <SideBar />\n      <div\n        id=\"app-container\"\n        style={{\n          marginLeft: \"auto\",\n          width: \"100%\"\n        }}\n      >\n        <AppRouter />\n      </div>\n      <Footer />\n      {/* <Overlay /> */}\n    </div>\n  );\n}\n\nexport default App;\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faSmile, faAddressBook } from \"@fortawesome/free-solid-svg-icons\";\r\nlibrary.add(faSmile, faAddressBook);\r\n","import AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\nAOS.init({\r\n  offset: 100,\r\n  duration: 700,\r\n  easing: \"ease-in-sine\",\r\n  delay: 100\r\n});\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst primaryColor = \"#007ebe\";\r\n\r\nexport const theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      \"Titillium Web\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"'\r\n    ].join(\",\")\r\n  },\r\n  palette: {\r\n    primary: {\r\n      // light: will be calculated from palette.primary.main,\r\n      main: primaryColor\r\n      // dark: will be calculated from palette.primary.main,\r\n      // contrastText: will be calculated to contrast with palette.primary.main\r\n    },\r\n    secondary: {\r\n      main: \"#8bb6cb\"\r\n      // dark: will be calculated from palette.secondary.main,\r\n    }\r\n    // error: will use the default color\r\n  },\r\n  overrides: {\r\n    MuiOutlinedInput: {\r\n      notchedOutline: {\r\n        borderColor: primaryColor,\r\n        borderWidth: 1\r\n      }\r\n    },\r\n    MuiInputLabel: {\r\n      root: {\r\n        // color: \"red\"\r\n        color: primaryColor\r\n      }\r\n    }\r\n  }\r\n});\r\n","import { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ScrollToTop extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React from \"react\";\r\nimport \"./theme.scss\";\r\nimport \"./App.scss\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { theme } from \"./materialTheme\";\r\nimport ScrollToTop from \"./ScrollToTopController\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport { ContextProvider } from \"../stores/Context\";\r\n\r\nconst AppWrapper = props => {\r\n  return (\r\n    <BrowserRouter>\r\n      <ContextProvider>\r\n        <ThemeProvider theme={theme}>\r\n          <ScrollToTop>{props.children}</ScrollToTop>\r\n        </ThemeProvider>\r\n      </ContextProvider>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default AppWrapper;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./helpers/vendors\";\nimport AppWrapper from \"./helpers/AppWrapper\";\n\nReactDOM.render(\n  <AppWrapper>\n    <App />\n  </AppWrapper>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}